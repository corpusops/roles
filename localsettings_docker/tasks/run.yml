---
#
- block:
  - name: install localsettings_docker repokey
    apt_key:
      url: '{{corpusops_localsettings_docker_vars.repo_keys_url}}'
      state: present
    when: "(ansible_os_family.lower() in ['debian'] and
            corpusops_localsettings_docker_vars.repo_keys is not none and
            corpusops_localsettings_docker_vars.repo_keys|length > 0)"
    register: corpusops_localsettings_docker_key
  rescue:
  - name: "Alternative | Add Docker apt key."
    shell: >
      curl -sSL "{{corpusops_localsettings_docker_vars.repo_keys_url}}" {% if ansible_distribution.lower() in ['debian'] %}
      |sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg{% else %}|sudo apt-key add -{% endif%}
    register: corpusops_localsettings_docker_key
- name: "Debian alternative | Add Docker apt key."
  shell: |-
    set -e
    if [ ! -e /etc/apt/keyrings ];then mkdir -p /etc/apt/keyrings;fi
    if [ ! -e /etc/apt/keyrings/docker.gpg ];then
    curl -sSL "{{corpusops_localsettings_docker_vars.repo_keys_url}}"|sudo gpg --dearmor --yes -o /etc/apt/keyrings/docker.gpg
    echo changedkey
    fi
  when:
  - ansible_distribution.lower() in ['debian']
  changed_when:
  - "'changedkey' in corpusops_localsettings_docker_key.stdout"
  register: corpusops_localsettings_docker_key
- name: remove docker setup
  file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent
  when: "(ansible_os_family.lower() in ['debian'] and
          ansible_env.get('TRAVIS', '') | copsf_bool)"
- name: install localsettings_docker repo
  apt_repository:
    repo: '{{corpusops_localsettings_docker_vars.repo}}'
    filename: localsettings_docker
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_docker_vars.repo is not none)"
  register: corpusops_localsettings_docker_repoa
- apt: {update_cache: yes}
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_docker_repoa.changed or
          corpusops_localsettings_docker_key is changed)"
- name: install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: '{{corpusops_localsettings_docker_vars.packages}}'
    state: present
  loop_control: {loop_var: dockeriteml}
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_docker_vars.packages is not none and
          corpusops_localsettings_docker_vars.packages|length > 0)"
  register: corpusops_localsettings_docker_c_pkg_deb
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: "{{corpusops_localsettings_docker_vars.packages|flatten(levels=1)}}"
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_docker_vars.packages is not none and
          corpusops_localsettings_docker_vars.packages|length > 0)"
  loop_control: {loop_var: dockeritemk}
- name: update & install prerequisites (yum-utils)
  package:
    update_cache: yes
    enablerepo: epel-testing
    name: 'yum-utils'
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_localsettings_docker_vars.packages is not none and
          corpusops_localsettings_docker_vars.packages|length > 0)"
- name: repo
  shell: |
    yum-config-manager --add-repo "{{dockeritemi}}"
  loop: "{{[corpusops_localsettings_docker_vars.repo]|flatten(levels=1)}}"
  loop_control: {loop_var: dockeritemi}
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_localsettings_docker_vars.packages is not none and
          corpusops_localsettings_docker_vars.packages|length > 0)"
- name: update & install prerequisites
  package:
    update_cache: yes
    enablerepo: epel-testing
    name: "{{corpusops_localsettings_docker_vars.packages}}"
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_localsettings_docker_vars.packages is not none and
          corpusops_localsettings_docker_vars.packages|length > 0)"
  register: corpusops_localsettings_docker_c_pkg_rh
  loop_control: {loop_var: dockeritemh}
# dont use pip module which isnt very reliable with old
# pip installs (like we have on stock ubuntu-trusty
# (SNI madness, look at me)
- name: install python pre - prerequisites
  shell: |
    set -e
    py="{{ansible_python.executable}}"
    # retry to use wheels
    # if ( $py -m pip install --help 2>&1|grep -E -iq -- --no-binary; );then
    #   nb="--no-binary :all:"
    # elif ( $py -m pip install --help 2>&1|grep -E -iq -- --no-use-wheel; );then
    #   nb="--no-use-wheel"
    # else
    #   nb=""
    # fi
    if ( $py -V 2>&1|grep -iq "python 2");then
      sreq="{{corpusops_localsettings_pip_setuptools_old_req}}"
    else
      sreq="{{corpusops_localsettings_pip_setuptools_req}}"
    fi
    $py -c 'import setuptools' || $py -m pip install $sreq
    $py -m pip install \
    {{corpusops_localsettings_docker_vars.pip_args}} ${nb} \
    $( if ! ( $py -m pip install --help |grep -q -- prefer-binary );then echo 'cryptography<3.4';fi ) \
    {{corpusops_localsettings_docker_vars.py_packages|join(' ')}}
  changed_when: '"Successfully installed" in corpusops_localsettings_docker_c_pyinst.stdout'
  register: corpusops_localsettings_docker_c_pyinst
  when: "corpusops_localsettings_docker_vars.has_docker_py"
- group:
    name: "{{corpusops_localsettings_docker_vars.group}}"
    system: yes
    state: present
  register: corpusops_localsettings_docker_c_group
- include_role: {name: corpusops.roles/configs, public: false}
  vars:
    cops_configs_files: "{{corpusops_localsettings_docker_vars.files}}"
    cops_configs_copys: "{{corpusops_localsettings_docker_vars.filescopy}}"
    cops_configs_templates: "{{corpusops_localsettings_docker_vars.configs}}"
  tags: [docker_configs]
- set_fact:
    cacheable: false
    corpusops_localsettings_docker_c_files: "{{cops_configs_files_results}}"
    corpusops_localsettings_docker_c_filesc: "{{cops_configs_copys_results}}"
    corpusops_localsettings_docker_c_configs: "{{cops_configs_templates_results}}"
  tags: [docker_configs]
- set_fact:
    cacheable: false
    corpusops_localsettings_docker_configs_changed: "{{(
      corpusops_localsettings_docker_c_pkg_rh is changed or
      corpusops_localsettings_docker_c_pkg_deb is changed or
      corpusops_localsettings_docker_c_group is changed or
      corpusops_localsettings_docker_c_files is changed or
      corpusops_localsettings_docker_c_filesc is changed or
      corpusops_localsettings_docker_c_configs is changed)}}"
