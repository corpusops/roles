---
- name: gen diffie-h file
  shell: |
    f="{{corpusops_services_ftp_pureftpd_vars.dhparam}}";d="$(dirname $f)";
    if test ! -e "$d";then mkdir -p "$d";fi;
    if test ! -e "$f";then
      openssl dhparam -out "$f" 2048;chmod 644 "$f";echo "ansibledhgen" >&2 ;
    fi
  register: corpusops_services_ftp_pureftpd_dh
  changed_when: "'ansibledhgen' in corpusops_services_ftp_pureftpd_dh.stderr"
- include_role: {name: corpusops.roles/configs, public: false}
  vars:
    cops_configs_files: "{{corpusops_services_ftp_pureftpd_vars.files}}"
    cops_configs_copys: "{{corpusops_services_ftp_pureftpd_vars.filescopy}}"
    cops_configs_templates: "{{corpusops_services_ftp_pureftpd_vars.configs}}"
  register: corpusops_services_ftp_pureftpd_configst1
  tags: [pureftpd_configs]
- set_fact:
    cacheable: false
    corpusops_services_ftp_pureftpd_filest: "{{cops_configs_files_results}}"
    corpusops_services_ftp_pureftpd_filesct: "{{cops_configs_copys_results}}"
    corpusops_services_ftp_pureftpd_configst: "{{cops_configs_templates_results}}"
  register: corpusops_services_ftp_pureftpd_configst2
  tags: [pureftpd_configs]
- set_fact:
    cacheable: false
    corpusops_services_ftp_pureftpd_configs_changed: "{{(
      corpusops_services_ftp_pureftpd_filest is changed or
      corpusops_services_ftp_pureftpd_filesct is changed or
      corpusops_services_ftp_pureftpd_configst is changed)}}"
- tags: [pureftpd_knobs]
  block:
  - copy:
      content: "{{item.value}}"
      force: true
      dest: "{{corpusops_services_ftp_pureftpd_vars.prefix}}/conf/{{item.key}}"
      mode: "0644"
      owner: root
      group: root
    register: corpusops_services_ftp_pureftpd_configst3
    loop: |
      {%- set res = {} %}
      {%- set data = corpusops_services_ftp_pureftpd_vars %}
      {%- set passive = data.conf['ForcePassiveIP'] or data.conf['PassivePortRange']%}
      {%- for setting, value in data.conf.items() %}
      {%- if (
          value.strip()
          and (
            'Passive' not in setting
            or ('Passive' in setting and passive)
          )
         ) %}
      {%- set _ = res.update({setting: value}) %}
      {%- endif %}
      {%- endfor %}
      {{- res|dict2items }}
  - file:
      state: link
      path: "{{corpusops_services_ftp_pureftpd_vars.prefix}}/auth/50puredb"
      src:  "{{corpusops_services_ftp_pureftpd_vars.prefix}}/conf/PureDB"
  - file:
      state: absent
      dest: "{{corpusops_services_ftp_pureftpd_vars.prefix}}/conf/{{item.key}}"
    register: corpusops_services_ftp_pureftpd_configst4
    loop: |-
      {%- set res = {} %}
      {%- set data = corpusops_services_ftp_pureftpd_vars %}
      {%- set passive = data.conf['ForcePassiveIP'] or data.conf['PassivePortRange']%}
      {%- for setting, value in data.conf.items() %}
      {%- if not(
          value.strip()
          and (
            'Passive' not in setting
            or ('Passive' in setting and passive)
          )
         ) %}
      {%- set _ = res.update({setting: value}) %}
      {%- endif %}
      {%- endfor %}
      {{- res|dict2items }}
- blockinfile:
    dest: "{{corpusops_vars.config_dir}}/shells"
    marker: "# {mark} pureftpd cops shell"
    insertafter: EOF
    unsafe_writes: "{% if ansible_virtualization_type in ['docker', 'container']%}True{%else%}{{omit}}{%endif%}"
    block: |
           /bin/ftponly
- shell: |
    set -ex
    {% set key = corpusops_services_ftp_pureftpd_vars.key %}
    if [ ! -e "{{key}}" ];then
      doi=1
    {% if corpusops_services_ftp_pureftpd_vars.force_ssl_regen %}
    else
      CN=$(openssl x509 -in "{{corpusops_services_ftp_pureftpd_vars.key}}"  -noout -subject 2>&1|sed "s/.*CN\s*=\s*//g")
      if [ "x${CN}" != "x{{corpusops_services_ftp_pureftpd_vars.cert_cn}}" ];then
        doi=1
      fi
    {% endif %}
    fi
    if [ "x${doi}" = "x1" ];then
      if [ -e "{{key}}" ];then rm -f "{{key}}";fi
      openssl req -batch -x509 -nodes -days 36500 -newkey rsa:2048 \
        -keyout "{{key}}" -out "{{key}}" \
        -subj "{{corpusops_services_ftp_pureftpd_vars.cert_subj}}"
    fi
    chmod 600 "{{key}}"
    chown root:root "{{key}}"
  changed_when: false
- shell: pure-pw mkdb
  changed_when: false
- set_fact:
    cacheable: false
    corpusops_services_ftp_pureftpd_configs_changed: "{{
      (corpusops_services_ftp_pureftpd_configst4|default({})) is changed or
      (corpusops_services_ftp_pureftpd_configst3|default({})) is changed or
      (corpusops_services_ftp_pureftpd_configst2|default({})) is changed or
      (corpusops_services_ftp_pureftpd_configst1|default({})) is changed}}"
