---
- name: update & install prerequisites
  apt:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: '{{corpusops_localsettings_locales_vars.packages}}'
    state: present
  when: "(ansible_os_family == 'Debian' and
          corpusops_localsettings_locales_vars.packages is not none and
          corpusops_localsettings_locales_vars.packages|length > 0)"
- shell: locale -a | sed -re "s/utf8/UTF-8/g"
  failed_when: False
  changed_when: False
  register: corpusops_localsettings_locales_installed_locales

- shell: |
    {% set localeo = item %}
    {% set locale = localeo.replace(
          '-', '').replace(
            'utf8', 'UTF-8').replace(
              'UTF8', 'UTF-8') %}
    {% if '.' in locale %}
    {%   set cp = locale.split('.', 1)[1].split('@', 1)[0] %}
    {%   set lang = locale.split('.', 1)[0] %}
    {% else %}
    {%   set cp = None  %}
    {% endif %}
    {% if '@' in locale %}
    {%  set variant = '@'+locale.split('@', 1)[0] %}
    {% else %}
    {%  set variant = '' %}
    {% endif %}
    set -ex
    {% if ansible_os_family.lower() in ['debian'] %}
    if [ -e /etc/locale.gen ] && ! (
      egrep -q "^{{lang.lower()}}.*{{variant}}.*{{cp.lower()}}" /etc/locale.gen
    );then
      echo "Adding {{lang}} {{cp}} to gen"
      echo "{{lang}}{% if 'iso' not in cp.lower() %}.{{cp}}{%endif%}{{variant}} {{cp}}">>/etc/locale.gen
    fi
    locale-gen {{locale}}
    {%   if localeo != locale %}
    locale-gen {{localeo}}
    {%   endif %}
    {% endif %}
    {% if ansible_os_family.lower() in ['redhat'] %}
    localedef -c {%if cp %}-f {{cp}}{%endif%} -i {{lang}} {{locale}}
    {%   if localeo != locale %}
    localedef -c {%if cp %}-f {{cp}}{%endif%} -i {{lang}} {{localeo}}
    {%   endif %}
    {% endif %}
  loop: '{{corpusops_localsettings_locales_vars.locales}}'
  when: 'item not in corpusops_localsettings_locales_installed_locales.stdout_lines'
- shell: locale -a | sed -re "s/utf8/UTF-8/g"
  failed_when: False
  changed_when: False
  register: corpusops_localsettings_locales_installed_locales2

- name: Ensure that specified locales exist
  debug: msg=locales
  failed_when: "(item not in
                 corpusops_localsettings_locales_installed_locales2.stdout_lines)"
  loop: '{{corpusops_localsettings_locales_vars.locales}}'

- shell: which update-locale
  failed_when: False
  changed_when: False
  register: corpusops_localsettings_locales_has_updatelocales
  when: "ansible_os_family.lower() in ['debian']"
- shell: |
    grep -q \
      'LANG={{corpusops_localsettings_locales_vars.locale}}'\
      /etc/default/locale
  failed_when: False
  changed_when: False
  register: corpusops_localsettings_locales_installed_default
  when: "ansible_os_family.lower() in ['debian']"
- name: Set default system locale
  debconf:
    name: 'locales'
    question: 'locales/default_environment_locale'
    vtype: 'string'
    value: '{{corpusops_localsettings_locales_vars.locale}}'
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_locales_vars.locale is not none)"
- shell: |
    update-locale LANG="{{ corpusops_localsettings_locales_vars.locale}}"
  when: "(
         (ansible_os_family.lower() in ['debian']) and
         (0==corpusops_localsettings_locales_has_updatelocales.rc) and
         (1==corpusops_localsettings_locales_installed_default)
         )"

- name: configs
  template:
    src: "../templates/{{item.name}}"
    dest: "{{item.name}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: "{{item.trim_blocks|default(False)}}"
  loop: "{{corpusops_localsettings_locales_vars.configs|flatten(levels=1)}}"
  when: "(corpusops_localsettings_locales_vars.configs is not none and
          corpusops_localsettings_locales_vars.configs|length > 0)"
