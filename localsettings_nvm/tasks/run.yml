---
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  with_items: "{{corpusops_localsettings_nvm_vars.files}}"
  when: "(corpusops_localsettings_nvm_vars.files is not none and
          corpusops_localsettings_nvm_vars.files|length > 0)"
- name: configs
  template:
    src: "{{item.src|default('../templates/'+item.name)}}"
    dest: "{{item.dest|default(item.name)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: "{{item.trim_blocks|default(False)}}"
  with_items: "{{corpusops_localsettings_nvm_vars.configs}}"
  when: "(corpusops_localsettings_nvm_vars.configs is not none and
          corpusops_localsettings_nvm_vars.configs|length > 0)"
# forward vars to handle include_role bugs...
- when: '"latest" in corpusops_localsettings_nvm_vars.versions'
  uri:
    url: "https://api.github.com/repos/{{corpusops_localsettings_nvm_vars.github}}/releases/latest"
  register: _cops_get_version_latest
  changed_when: false
- set_fact:
    cacheable: false
    _cops_nvm_install_system: "(ansible_user_uid == 0) and corpusops_localsettings_nvm_system_vars.bashrc|copsf_asbool"

    _cops_nvm_versions: |-
      {% set res = [] %}
      {% for v in corpusops_localsettings_nvm_vars.versions %}
      {% set vv = v %}
      {% if v == 'latest' %}{% set vv = _cops_get_version_latest.json.tag_name %}{%endif%}
      {% set _ = res.append(vv) %}
      {% endfor %}
      {{ res | to_json }}
- when: "_cops_nvm_install_system"
  tags: [nvm_system]
  include_tasks: install_system.yml
- tags: [nvm_user]
  include_tasks: install_user.yml
