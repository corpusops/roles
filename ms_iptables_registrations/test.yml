---
- hosts: all
  tasks:
  - file:
      path: "{{item}}"
      state: absent
    loop:
    - /tmp/ms_iptables/test1.cfg
    - /tmp/ms_iptables/test2.cfg
  - include_role: {name: corpusops.roles/ms_iptables_registrations, public: false}
    vars:
      _corpusops_ms_iptables_registrations:
        prefix: /tmp/ms_iptables
        file: test1.cfg
      corpusops_ms_iptables_registrations_registrations_b1: {rules: ["bin/true"]}
      corpusops_ms_iptables_registrations_registrations_b2:
        rules: ["bin/true2"]
        load_default_rules: true
  - include_role: {name: corpusops.roles/ms_iptables_registrations, public: false}
    vars:
      _corpusops_ms_iptables_registrations:
        prefix: /tmp/ms_iptables
        file: test2.cfg
      corpusops_ms_iptables_registrations_registrations_b1: {rules: ["bin/true3"]}
      corpusops_ms_iptables_registrations_registrations_b2: {rules: ["bin/true4"]}
  - stat: "path={{item}}"
    register: ms_iptables_test_files
    loop:
    - /tmp/ms_iptables/test1.cfg
    - /tmp/ms_iptables/test2.cfg
  - debug:
      msg: |
           {% set ret = {"r": True} %}
           {% for a in ms_iptables_test_files.results %}
           {% if not a.stat.exists %}
           {% set _ = ret.update({"r": False}) %}
           {% endif %}
           {% endfor %}
           {{ ret | to_json }}
    register: tms_iptables_test_files
    failed_when: "not tms_iptables_test_files.msg.r"
