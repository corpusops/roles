---
- listen: restart_corpusops_services_virt_docker
  systemd:
    daemon_reload: yes
    state: restarted
    name: "{{hdockeritemd}}"
  loop_control: {loop_var: hdockeritemd}
  with_items: "{{corpusops_services_virt_docker_vars.services}}"
  when: "(corpusops_services_virt_docker_vars.activated and
          corpusops_vars.has_services_manager and
          (ansible_service_mgr == 'systemd'))"
  tags: corpusops_services_virt_docker
- listen: restart_corpusops_services_virt_docker
  service:
    state: restarted
    name: "{{hdockeritemc}}"
  with_items: "{{corpusops_services_virt_docker_vars.services}}"
  loop_control: {loop_var: hdockeritemc}
  when: "(corpusops_services_virt_docker_vars.activated and
          corpusops_vars.has_services_manager and
          (ansible_service_mgr != 'systemd'))"
  tags: corpusops_services_virt_docker
