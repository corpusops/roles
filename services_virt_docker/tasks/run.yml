---
# install prerequisites on trusty
- name: install pre -py- prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: "{{item}}"
    state: installed
  with_items: [python-pip, python-dev, libffi-dev, libssl-dev]
  when: |
      {{ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_major_version < '15' }}
  tags: corpusops_services_virt_docker
- name: install python pre - prerequisites
  pip:
    executable: /usr/bin/pip
    name: "{{ item }}"
    state: present
  with_items: [urllib3, pyopenssl, ndg-httpsclient, pyasn1]
  when: |
      {{ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_major_version < '15' }}
  tags: corpusops_services_virt_docker
#
- name: install pre - prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: "{{item}}"
    state: installed
  with_items: [apt-transport-https, ca-certificates, curl]
  when: |
      {{ansible_os_family.lower() in ['debian'] and
        corpusops_services_virt_docker_vars.packages is not none and
        corpusops_services_virt_docker_vars.packages|length > 0}}
  tags: corpusops_services_virt_docker
- name: install services_virt_docker repokey
  apt_key:
    url: '{{corpusops_services_virt_docker_vars.repo_keys_url}}'
    state: present
  with_items: '{{corpusops_services_virt_docker_vars.repo_keys}}'
  when: "{{ansible_os_family.lower() in ['debian'] and
           corpusops_services_virt_docker_vars.repo_keys is not none and
           corpusops_services_virt_docker_vars.repo_keys|length > 0}}"
  register: corpusops_services_virt_docker_key
  tags: corpusops_services_virt_docker
- name: install services_virt_docker repo
  apt_repository:
    repo: '{{corpusops_services_virt_docker_vars.repo}}'
    filename: /etc/apt/sources.list.d/services_virt_docker.list
    state: present
  when: "{{ansible_os_family.lower() in ['debian'] and
           corpusops_services_virt_docker_vars.repo is not none}}"
  register: corpusops_services_virt_docker_repo
  tags: corpusops_services_virt_docker
- apt:
    update_cache: yes
  when: "{{ansible_os_family.lower() in ['debian'] and
           corpusops_services_virt_docker_repo.changed or
           corpusops_services_virt_docker_key.changed}}"
  tags: corpusops_services_virt_docker
- name: install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: "{{item}}"
    state: installed
  with_items: '{{corpusops_services_virt_docker_vars.packages}}'
  when: |
      {{ansible_os_family.lower() in ['debian'] and
        corpusops_services_virt_docker_vars.packages is not none and
        corpusops_services_virt_docker_vars.packages|length > 0}}
  tags: corpusops_services_virt_docker
  notify: [restart_corpusops_services_virt_docker]
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    package: '{{item}}'
    state: present
  when: "{{ansible_os_family.lower() in ['debian'] and
           corpusops_services_virt_docker_vars.packages is not none and
           corpusops_services_virt_docker_vars.packages|length > 0}}"
  tags: corpusops_services_virt_docker
  with_items: "{{corpusops_services_virt_docker_vars.packages}}"
- name: update & install prerequisites (yum-utils)
  package:
    update_cache: yes
    enablerepo: epel-testing
    package: 'yum-utils'
    state: present
  when: "{{ansible_os_family.lower() in ['redhat'] and
           corpusops_services_virt_docker_vars.packages is not none and
           corpusops_services_virt_docker_vars.packages|length > 0}}"
  tags: corpusops_services_virt_docker
  with_items: "{{corpusops_services_virt_docker_vars.packages}}"
- name: repo
  shell: |
         yum-config-manager --add-repo "{{item}}"
  with_items: ["{{corpusops_services_virt_docker_vars.repo}}"]
  tags: corpusops_services_virt_docker
  when: "{{ansible_os_family.lower() in ['redhat'] and
           corpusops_services_virt_docker_vars.packages is not none and
           corpusops_services_virt_docker_vars.packages|length > 0}}"
- name: update & install prerequisites
  package:
    update_cache: yes
    enablerepo: epel-testing
    package: '{{item}}'
    state: present
  when: "{{ansible_os_family.lower() in ['redhat'] and
           corpusops_services_virt_docker_vars.packages is not none and
           corpusops_services_virt_docker_vars.packages|length > 0}}"
  tags: corpusops_services_virt_docker
  with_items: "{{corpusops_services_virt_docker_vars.packages}}"
- group:
    name: "{{corpusops_services_virt_docker_vars.group}}"
    system: yes
    state: present
  notify: [restart_corpusops_services_virt_docker]
  tags: corpusops_services_virt_docker
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    src: "{{item.src|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    recurse: "{{item.recurse|default(omit)}}"
  with_items: "{{corpusops_services_virt_docker_vars.files}}"
  when: |
    {{corpusops_services_virt_docker_vars.files is not none and
      corpusops_services_virt_docker_vars.files|length > 0}}
  tags: corpusops_services_virt_docker
  notify: [restart_corpusops_services_virt_docker]
- name: files copy
  copy:
    dest: "{{item.dest|default(omit)}}"
    src: "{{item.template
            | default('../templates/'+item.dest)}}"
    force: "{{item.get('force', True)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    recurse: "{{item.recurse|default(omit)}}"
  with_items: "{{corpusops_services_virt_docker_vars.filescopy}}"
  when: |
    {{corpusops_services_virt_docker_vars.filescopy is not none and
      corpusops_services_virt_docker_vars.filescopy|length > 0}}
  tags: corpusops_services_virt_docker
  notify: [restart_corpusops_services_virt_docker]
- name: configs
  template:
    src: "{{item.template
            | default('../templates/'+item.name)}}"
    dest: "{{item.name}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  with_items: "{{corpusops_services_virt_docker_vars.configs}}"
  when: |
    {{corpusops_services_virt_docker_vars.configs is not none and
      corpusops_services_virt_docker_vars.configs|length > 0}}
  tags: corpusops_services_virt_docker
  notify: [restart_corpusops_services_virt_docker]
- service:
    state: "{{corpusops_services_virt_docker_vars.activated
              | ternary('started', 'stopped')}}"
    enabled: "{{corpusops_services_virt_docker_vars.activated
                | ternary(True, False)}}"
    name: "{{item}}"
  with_items: "{{corpusops_services_virt_docker_vars.services}}"
  tags: corpusops_services_virt_docker
  when: "{{corpusops_vars.has_services_manager}}"
