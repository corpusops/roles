---
# install prerequisites on trusty
- file:
    path: "{{item}}"
    state: absent
  with_items:
  - /etc/apt/sources.list.d/services_virt_docker.list.list
  - /etc/apt/sources.list.d/services_virt_docker.list
- include_role: {name: corpusops.roles/configs, private: true}
  vars:
    cops_configs_files: "{{corpusops_services_virt_docker_vars.files}}"
    cops_configs_copys: "{{corpusops_services_virt_docker_vars.filescopy}}"
    cops_configs_templates: "{{corpusops_services_virt_docker_vars.configs}}"
  tags: [docker_configs]
- set_fact:
    cacheable: false
    corpusops_services_virt_docker_filest: "{{cops_configs_files_results}}"
    corpusops_services_virt_docker_filesct: "{{cops_configs_copys_results}}"
    corpusops_services_virt_docker_configst: "{{cops_configs_templates_results}}"
  tags: [docker_configs]
- set_fact:
    cacheable: false
    corpusops_services_virt_docker_configs_changed: "{{(
      corpusops_localsettings_docker_configs_changed|default(false) or
      corpusops_services_virt_docker_filest|changed or
      corpusops_services_virt_docker_filesct|changed or
      corpusops_services_virt_docker_configst|changed)}}"
- shell: echo trigger restart
  notify: [restart_corpusops_services_virt_docker]
  when: corpusops_services_virt_docker_configs_changed
- service:
    state: "{{corpusops_services_virt_docker_vars.activated
              | ternary('started', 'stopped')}}"
    enabled: "{{corpusops_services_virt_docker_vars.activated
                | ternary(True, False)}}"
    name: "{{dockeritemg}}"
  with_items: "{{corpusops_services_virt_docker_vars.services}}"
  loop_control: {loop_var: dockeritemg}
  tags: corpusops_services_virt_docker
  when: "corpusops_vars.has_services_manager"
- meta: flush_handlers
