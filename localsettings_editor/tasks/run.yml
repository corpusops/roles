---
- name: update & install prerequisites
  apt:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    package: '{{corpusops_localsettings_editor_vars.packages}}'
    state: present
  when: "{{ansible_os_family == 'Debian' and
           corpusops_localsettings_editor_vars.packages is not none and
           corpusops_localsettings_editor_vars.packages|length > 0}}"
  tags: corpusops_localsettings_editor
- name: configs
  template:
    src: "../templates/{{item.name}}"
    dest: "{{item.name}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  with_items: "{{corpusops_localsettings_editor_vars.configs}}"
  when: |
    {{corpusops_localsettings_editor_vars.configs is not none and
      corpusops_localsettings_editor_vars.configs|length > 0}}
  tags: corpusops_localsettings_editor
- name: 'install alternatives'
  shell: |
    set -ex
    {% set data = corpusops_localsettings_editor_vars %}
    {% set q='--quiet'%}{% if ansible_os_family.lower() in ['redhat'] %}{% set q=''%}{% endif %}
    {% for aname, adata in data.alternatives.items() %}
    {% set atarget = adata.get('target', '/usr/bin/{0}'.format(aname)) %}
    if update-alternatives --help | grep -q remove-all;then
      {# ubuntu #}
      update-alternatives {{q}} --remove-all {{aname}} || true;
    elif [ -e /var/lib/alternatives/{{aname}} ];then
      {# redhat #}
      rm -f /var/lib/alternatives/{{aname}}
    fi
    found=""
    current=$(readlink -f "{{atarget}}")
    {% for i in adata.bins %}
      if [ -e "{{i}}" ];then
       update-alternatives {{q}} --install "{{atarget}}" "{{aname}}" "{{i}}" 0
       if [ "x${found}" = "x" ] && [ "x${current}" != "x${{i}}" ];then found="{{i}}";fi
      fi
    {% endfor %}
    if [ -e "${found}" ] && [ "x${found}" != "x${current}" ];then
      update-alternatives --set {{aname}} ${found}
      echo "{{aname}} alternative changed to ${found}"
    fi
    echo "{{aname}} alternative set"
    {% endfor %}
  register: corpusops_localsettings_editor_alternatives
  changed_when: "{{'alternative changed' in corpusops_localsettings_editor_alternatives.stdout}}"
  tags: corpusops_localsettings_editor

