---
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_packer_vars.packages is not none and
          corpusops_localsettings_packer_vars.packages|length > 0)"
  loop: "{{corpusops_localsettings_packer_vars.packages|flatten(levels=1)}}"
- name: update & install prerequisites
  package:
    update_cache: yes
    name: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_localsettings_packer_vars.packages is not none and
          corpusops_localsettings_packer_vars.packages|length > 0)"
  loop: "{{corpusops_localsettings_packer_vars.packages|flatten(levels=1)}}"
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  loop: "{{corpusops_localsettings_packer_vars.files|flatten(levels=1)}}"
  when: "(corpusops_localsettings_packer_vars.files is not none and
          corpusops_localsettings_packer_vars.files|length > 0)"
- name: configs
  template:
    src: "{{item.src|default('../templates/'+item.name)}}"
    dest: "{{item.dest|default(item.name)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: "{{item.trim_blocks|default(False)}}"
  loop: "{{corpusops_localsettings_packer_vars.configs|flatten(levels=1)}}"
  when: "(corpusops_localsettings_packer_vars.configs is not none and
          corpusops_localsettings_packer_vars.configs|length > 0)"
# forward vars to handle include_role bugs...
- debug:
    msg:
      _archive:
        filetest: "{{corpusops_localsettings_packer_vars.filetest}}"
        archive: "{{_corpusops_localsettings_packer_archive}}"
        app_path: "{{_corpusops_localsettings_packer_app_path}}"
        urls:
          archive_crc: "{{_corpusops_localsettings_packer_urls.archive_crc}}"
          archive: "{{_corpusops_localsettings_packer_urls.archive}}"
          verify_sha256: true
  vars:
    version: "{{item}}"
  loop: "{{corpusops_localsettings_packer_vars.versions|flatten(levels=1)}}"
  register: corpusops_localsettings_packer_archives
- include_role: {name: corpusops.roles/install_archive}
  vars: {_archive: "{{item.msg._archive}}"}
  loop: "{{corpusops_localsettings_packer_archives.results|flatten(levels=1)}}"
#
- include_role: {name: corpusops.roles/set_alternatives}
  vars:
    version: "{{corpusops_localsettings_packer_vars.version}}"
    alternatives: "{{_corpusops_localsettings_packer_alternatives}}"
  when: "corpusops_localsettings_packer_vars.version is not none"
