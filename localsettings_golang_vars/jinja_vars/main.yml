---
{% set prefix = 'corpusops_localsettings_golang_' %}
{% set flavors = ['ubuntu', 'debian', 'redhat', 'default'] %}
{% set knobs = ['mirror', 'comps', 'repo',
                'version', 'versions',
                'configs', 'sources_lists', 'packages'] %}
{% set knobs = ['mirror', 'comps', 'repo',
							  'version', 'versions',
								'configs', 'sources_lists', 'packages'] %}
{% set computed_defaults = [] %}
{% set lowered = [] %}
{% set sub_namespaced = {'settings': {}} %}
{% set namespaced = {} %}
{% set subos_append = {} %}
{#
{% set subos_append = {
    'ubuntu': {'os': 'debian', 'vars': ['packages']}
} %}
#}

{% for v in knobs %}
{%  set setted = {'s': False} %}
{%  for os in flavors %}
{%   if (
        os == 'default' or
        ansible_os_family.lower() == os or
        ansible_lsb.id.lower() == os) %}
{%    set vn = prefix + v %}
{%    if vars[vn] is none %}
{%      set os_vpref = vn + '_' + os %}
{%      if os_vpref in vars and not setted.s %}
{%        set _ = vars.update({vn: vars[os_vpref]}) %}
{%        set _ = setted.update({'s': True}) %}
{%      endif %}
{%    endif %}
{%   endif %}
{%  endfor %}
{% endfor %}

{% for os in subos_append %}
{%  if ansible_lsb.id.lower() == os %}
{%    for v in subos_append[os].vars %}
{%      set vn = prefix+'{0}_{1}'.format(
            v, subos_append[os].os) %}
{%      set _ = vars[prefix+v].extend(vars[vn]) %}
{%    endfor %}
{%  endif %}
{% endfor %}

{% for k in computed_defaults %}
{%  set _ = vars.update({prefix+k: vars[prefix+k].format(**vars)}) %}
{% endfor %}
{% for k in lowered %}
{%  set _ = vars.update({prefix+k: vars[prefix+k].lower()}) %}
{% endfor %}

{% set arch = vars[prefix+'arch'] %}
{% set aarch = arch == 'amd64' and 'x64' or arch %}
{% set _ = vars.update({prefix+'aarch': aarch}) %}

{% if vars[prefix+'version'] not in vars[prefix+'versions'] %}
{% set _ = vars[prefix+'versions'].append(vars[prefix+'version']) %}
{% endif%}

{% set packages = [] %}
{% for v in vars[prefix+'versions'] %}
{%  for p in vars[prefix+'packages'] if v %}
{%    set _ = packages.append(p.format(v=v)) %}
{%  endfor %}
{% endfor %}
{% set _ = vars.update({prefix+'packages': packages}) %}

{% set flavors = [] %}
{% if packages %}
{% 	set flavor = 'system' %}
{% else %}
{% 	set flavor = vars[prefix+'flavor'] %}
{% 	for v in vars[prefix+'flavors'] %}
{% 		set _ = flavors.append(v.format(arch=arch))%}
{%  endfor %}
{% endif %}
{% set flavor = flavor.format(arch=arch) %}
{% if flavor not in flavors %}
{% 	set _ = flavors.append(flavor) %}
{% endif%}
{% if flavors and not flavor %}{% set flavor = flavors[0]%}{%endif%}
{% set _ = vars.update({prefix+'flavors': flavors}) %}
{% set _ = vars.update({prefix+'flavor': flavor}) %}

{% set bins = {} %}
{% for v, val in vars[prefix+'bins'].items() %}
{%  set name = val.name.format(arch=arch) %}
{%  set slaves = {} %}
{%  for s, sval in val.get('slaves', {}).items() %}
{%   set sname = sval.name.format(arch=arch) %}
{%   set _ = slaves.update({s: {'name': sname}})%}
{%  endfor %}
{% 	set _ = val.update({'slaves': slaves, 'name': name}) %}
{% 	set _ = bins.update({v: val})%}
{% endfor %}
{% set _ = vars.update({prefix+'bins': bins}) %}

{% set shas = vars[prefix+'shas'] %}
{% set headerss = vars[prefix+'headers'] %}
{% set urlmap = vars[prefix+'urlmap'] %}
{% for version in vars[prefix+'versions'] %}
{%  for flavor in flavors %}
{%    set selector = '{0}-{1}'.format(version, flavor) %}
{%	  if flavor == 'system' %}
{% 			set surl = none%}
{%      set bn = none %}
{%      set p = vars[prefix+'system_prefix'] %}
{%		else %}
{%    	set surl = urlmap.get(version, urlmap.get('default')).format(
                    v=version, f=flavor, arch=arch) %}
{%      set bn =  surl.split('/')[-1] %}
{%      set p = vars[prefix+'local_prefix'] %}
{%    endif%}
{%    set val = {'bn': bn, 'p': p, 'url': surl,
                 'version': version, 'flavor': flavor} %}
{%    set d = val.setdefault('d', val.p.format(**val)) %}
{%    set sha = shas.get(bn, shas.get('default', None)) %}{% if sha %}
{%      set _ = val.setdefault('sha', sha) %}
{%    endif %}
{%    set headers = headerss.get(bn, headerss.get('default', None)) %}{% if headers %}
{%      set _ = val.setdefault('headers', headers) %}
{%    endif %}
{%    set _ = vars[prefix+'installs'].setdefault(selector, val) %}
{%  endfor %}
{% endfor %}

{% set urls = vars[prefix+'urls'] %}
{% set installs = vars.get(prefix+'installs', {}) %}
{% for i, itm in installs.items() %}
{% 	if itm.get('url', None)%}{% set _ = urls.update({i: itm})%}{%endif%}
{% endfor%}

{% for var in vars %}
{%  if var.startswith(prefix) %}
{%   set skipped = {'skip': False } %}
{%   for flav in flavors if not skipped.skip %}
{%    if var.endswith('_'+flav) and var.split('_'+flav)[0] in vars %}
{%     set _ = skipped.update({'skip': True}) %}
{%    endif %}
{%   endfor %}
{%   for ns in sub_namespaced if sub_namespaced|length > 0 %}
{%    if var.startswith(prefix+ns+'_') and not skipped.skip%}
{%     set svar = var.replace(prefix+ns+'_', '') %}
{%     set _ = sub_namespaced[ns].update({svar: vars[var]}) %}
{%    endif %}
{%    set _ = namespaced.update({ns: sub_namespaced[ns]}) %}
{%   endfor %}
{%   if not skipped.skip %}
{%    set svar = var.replace(prefix, '') %}
{%    set _ = namespaced.update({svar: vars[var]}) %}
{%   endif %}
{%  endif %}
{% endfor %}
{{ namespaced | to_json }}
