---
# install custom config files
# vars[bar] is the uninterpreted value
- assert:
    that: "{{cops_configs_files|copsf_islist}}"
    msg: "{{cops_configs_files}} is not a list"
- assert:
    that: "{{cops_configs_copys|copsf_islist}}"
    msg: "{{cops_configs_copys}} is not a list"
- assert:
    that: "{{cops_configs_templates|copsf_islist}}"
    msg: "{{cops_configs_templates}} is not a list"
- when: ["cops_configs_is_async_files"]
  name: async files
  file:
    path: "{{cops_aconfig_fl_item.name
             | default(cops_aconfig_fl_item.path)}}"
    state: "{{cops_aconfig_fl_item.state|default(omit)}}"
    src: "{{cops_aconfig_fl_item.src|default(omit)}}"
    mode: "{{cops_aconfig_fl_item.mode|default(omit)}}"
    owner: "{{cops_aconfig_fl_item.owner|default(omit)}}"
    group: "{{cops_aconfig_fl_item.group|default(omit)}}"
    recurse: "{{cops_aconfig_fl_item.recurse|default(omit)}}"
  async: "{{cops_configs_async}}"
  poll: "{{cops_configs_poll}}"
  notify: "{{cops_configs_templates_notify
             | default((cops_configs_notify
             | default([])))}}"
  loop_control: {loop_var: cops_aconfig_fl_item}
  with_list: "{{cops_configs_files|default([])}}"
  register: cops_configs_files_results
- when: ["cops_configs_is_async_files"]
  include_tasks: ./_wrap_include_role.yml
  vars:
    cops_async_results: "{{cops_configs_files_results}}"

- when: "not (cops_configs_is_async|default(_cops_configs_is_async))"
  name: sync files
  file:
    path: "{{cops_aconfig_fl_item.name
             | default(cops_aconfig_fl_item.dest
                 | default(cops_aconfig_fl_item.path))}}"
    state: "{{cops_aconfig_fl_item.state|default(omit)}}"
    src: "{{cops_aconfig_fl_item.src|default(omit)}}"
    mode: "{{cops_aconfig_fl_item.mode|default(omit)}}"
    owner: "{{cops_aconfig_fl_item.owner|default(omit)}}"
    group: "{{cops_aconfig_fl_item.group|default(omit)}}"
    recurse: "{{cops_aconfig_fl_item.recurse|default(omit)}}"
  notify: "{{cops_configs_templates_notify
             | default((cops_configs_notify
             | default([])))}}"
  loop_control: {loop_var: cops_aconfig_fl_item}
  with_list: "{{cops_configs_files|default([])}}"
  register: cops_configs_files_results

# install custom config templates
- when: ["cops_configs_is_async_templates"]
  name: async templates
  template:
    dest: "{{cops_aconfig_cfg_item.dest|default(cops_aconfig_cfg_item.name)}}"
    src: "{{cops_aconfig_cfg_item.src
            | default(
                cops_aconfig_cfg_item.template
                | default('templates{0}'.format(
                  cops_aconfig_cfg_item.dest|default(cops_aconfig_cfg_item.name))
                  )
              )}}"
    force: "{{cops_aconfig_cfg_item.force|default(True)}}"
    mode: "{{cops_aconfig_cfg_item.mode|default(omit)}}"
    owner: "{{cops_aconfig_cfg_item.owner|default(omit)}}"
    group: "{{cops_aconfig_cfg_item.group|default(omit)}}"
    trim_blocks: "{{cops_aconfig_cfg_item.trim_blocks
                    |default(False)}}"
  async: "{{cops_configs_async}}"
  poll: "{{cops_configs_poll}}"
  notify: "{{cops_configs_templates_notify
             | default((cops_configs_notify
             | default([])))}}"
  loop_control: {loop_var: cops_aconfig_cfg_item}
  with_list: "{{cops_configs_templates|default([])}}"
  register: cops_configs_templates_results
- when: ["cops_configs_is_async_templates"]
  include_tasks: ./_wrap_include_role.yml
  vars:
    cops_async_results: "{{cops_configs_templates_results}}"

- when: ["not cops_configs_is_async_templates"]
  name: sync templates
  template:
    dest: "{{cops_aconfig_cfg_item.dest|default(cops_aconfig_cfg_item.name)}}"
    src: "{{cops_aconfig_cfg_item.src
            | default(
                cops_aconfig_cfg_item.template
                | default('templates{0}'.format(
                  cops_aconfig_cfg_item.dest|default(cops_aconfig_cfg_item.name))
                  )
              )}}"
    force: "{{cops_aconfig_cfg_item.force|default(True)}}"
    mode: "{{cops_aconfig_cfg_item.mode|default(omit)}}"
    owner: "{{cops_aconfig_cfg_item.owner|default(omit)}}"
    group: "{{cops_aconfig_cfg_item.group|default(omit)}}"
    trim_blocks: "{{cops_aconfig_cfg_item.trim_blocks
                    |default(False)}}"
  notify: "{{cops_configs_templates_notify
             | default((cops_configs_notify
             | default([])))}}"
  loop_control: {loop_var: cops_aconfig_cfg_item}
  with_list: "{{cops_configs_templates|default([])}}"
  register: cops_configs_templates_results

- when: ["cops_configs_is_async_copys"]
  name: async file copy
  copy:
    dest: "{{cops_aconfig_tpl_item.dest|default(omit)}}"
    src: "{{cops_aconfig_tpl_item.src
            | default(
                cops_aconfig_tpl_item.template
                | default(
                  'templates/'+cops_aconfig_tpl_item.dest
                )
              )}}"
    content: "{{cops_aconfig_tpl_item.content|default(omit)}}"
    force: "{{cops_aconfig_tpl_item.get('force', True)}}"
    mode: "{{cops_aconfig_tpl_item.mode|default(omit)}}"
    owner: "{{cops_aconfig_tpl_item.owner|default(omit)}}"
    group: "{{cops_aconfig_tpl_item.group|default(omit)}}"
    recurse: "{{cops_aconfig_tpl_item.recurse|default(omit)}}"
  async: "{{cops_configs_async}}"
  poll: "{{cops_configs_poll}}"
  notify: "{{cops_configs_copys_notify
             | default((cops_configs_notify
             | default([])))}}"
  loop_control: {loop_var: cops_aconfig_tpl_item}
  with_list: "{{cops_configs_copys|default([])}}"
  register: cops_configs_copys_results
- when: ["cops_configs_is_async_copys"]
  include_tasks: _wrap_include_role.yml
  vars:
    cops_async_results: "{{cops_configs_copys_results}}"

# Install copied files
- when: ["not cops_configs_is_async_copys"]
  name: sync file copy
  copy:
    dest: "{{cops_aconfig_tpl_item.dest|default(omit)}}"
    src: "{{(not (cops_aconfig_tpl_item.content|default(false)) and
            (cops_aconfig_tpl_item.src
            | default(
                cops_aconfig_tpl_item.template
                | default(
                  'templates/'+cops_aconfig_tpl_item.dest
                )
            )) or omit)}}"
    content: "{{cops_aconfig_tpl_item.content|default(omit)}}"
    force: "{{cops_aconfig_tpl_item.get('force', True)}}"
    mode: "{{cops_aconfig_tpl_item.mode|default(omit)}}"
    owner: "{{cops_aconfig_tpl_item.owner|default(omit)}}"
    group: "{{cops_aconfig_tpl_item.group|default(omit)}}"
    recurse: "{{cops_aconfig_tpl_item.recurse|default(omit)}}"
  notify: "{{cops_configs_copys_notify
             | default((cops_configs_notify
             | default([])))}}"
  loop_control: {loop_var: cops_aconfig_tpl_item}
  with_list: "{{cops_configs_copys|default([])}}"
  register: cops_configs_copys_results
