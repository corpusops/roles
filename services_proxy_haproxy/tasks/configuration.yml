---
- tags: [haproxy_configs]
  block:
  - set_fact:
      cacheable: false
      cops_configs_files: "{{corpusops_services_proxy_haproxy_vars.files}}"
      cops_configs_copys: "{{corpusops_services_proxy_haproxy_vars.filescopy}}"
      cops_configs_templates: "{{corpusops_services_proxy_haproxy_vars.configs}}"
  - include_role: {name: corpusops.roles/configs, private: true}
  - set_fact:
      cacheable: false
      corpusops_services_proxy_haproxy_filest: "{{cops_configs_files_results}}"
      corpusops_services_proxy_haproxy_filesct: "{{cops_configs_copys_results}}"
      corpusops_services_proxy_haproxy_configst: "{{cops_configs_templates_results}}"
- when: "not (corpusops_services_proxy_haproxy_vars.maincert_crt|copsf_asbool)"
  tags: [haproxy_crt, haproxy_crt_main]
  block:
  - file:
      state: absent
      path: "{{corpusops_services_proxy_haproxy_vars.maincert_path}}"
  - include_tasks: _selfsignedcrt.yml
    with_items: "{{corpusops_services_proxy_haproxy_vars.selfsignedcert_cns}}"
    loop_control: {loop_var: cn}
- when: "corpusops_services_proxy_haproxy_vars.maincert_crt|copsf_asbool"
  tags: [haproxy_crt, haproxy_crt_selfsigned]
  block:
  - shell: "rm -f {{d.maincert_path}}.copshaproxyselfsigned*"
  - copy:
      force: true
      owner: root
      group: "{{corpusops_services_proxy_haproxy_vars.group}}"
      content: "{{corpusops_services_proxy_haproxy_vars.maincert_crt}}"
      dest: "{{corpusops_services_proxy_haproxy_vars.maincert_path}}"
- shell: "/usr/bin/cops_haproxy_wrapper.sh check"
  tags: [haproxy_crt, haproxy_crt_check]
  changed_when: false
- set_fact:
    cacheable: false
    corpusops_services_proxy_haproxy_configs_changed: "{{(
      corpusops_services_proxy_haproxy_filest is changed or
      corpusops_services_proxy_haproxy_filesct is changed or
      corpusops_services_proxy_haproxy_configst is changed)}}"
