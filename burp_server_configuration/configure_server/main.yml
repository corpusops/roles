---
- import_playbook: ../configure_server/vars.yml
# if reconfigure=true: base clients on what is found on server/clientconfdir
- hosts: "{{hostvars.localhost.aburp_servers}}"
  gather_facts: false
  tasks:
  - shell: |
      set -e
      d="{{hostvars.localhost.aburp_confdir}}"
      test -e "$d" &&  ( cd "$d" && find -L -type f -maxdepth 1|sed -e "s/.\///g" )
    failed_when: false
    changed_when: false
    register: burpclientconfdircontents
  - set_fact:
      computed_burp_clients: |-
        {%- set l = hostvars.localhost.burp_reconf_limit and hostvars.localhost.burp_reconf_limit|int or None %}
        {%- set f = (burpclientconfdircontents.stdout.split()|sort) %}
        {%- set c = (aburp_clients|default([])|flatten(levels=1)|sort) %}
        {%- if not c %}
        {%-   for i in f %}{% if i in hostvars %}
        {%-    set _ = c.append(i) %}
        {%-   endif %}{% endfor %}
        {%- endif %}
        {%- if c|copsf_islist %}{% set c = c[:l]%}{% endif%}
        {%- if not c|copsf_isstr %}{{-c|to_json}}{%
          elif c in groups %}{{groups[c]}}{%
          else%}{{-c}}{%endif%}
- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
  - set_fact:
      cacheable: false
      saburp_clients: |-
        {% set c = {} %}
        {% for s in hostvars.localhost.aburp_servers %}
        {% set _ = c.update({s: hostvars[s].get('computed_burp_clients', [])}) %}
        {% endfor%}
        {{c}}
  - set_fact:
      saburp_clients_facts: |-
         {%- set f =['localhost']+hostvars.localhost.aburp_servers%}
         {%- if get_burp_clients_facts|default(True) %}
         {%-  for o in saburp_clients.values()%}
         {%-    set _ = f.extend(o) %}
         {%-  endfor %}
         {%- endif %}
         {{- f|to_json-}}
- hosts: "{{hostvars.localhost.saburp_clients_facts}}"
  gather_facts: true
  roles: ["corpusops.roles/vars", "corpusops.roles/burp_plugins"]
- import_playbook: ../configure_server/configure.yml
