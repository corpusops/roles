---
# - debug:
#     msg: "{% set cdata = hostvars.get(item, {}) %}{{ cdata.get('public_ips', [])}}"
#   delegate_to: "{{item}}"
#   delegate_facts: true
#   when: item in hostvars
# - debug:
#     msg: "{% set cdata = hostvars.get(item, {}) %}{{cdata.get('public_ip', None)}}"
#   delegate_to: "{{item}}"
#   delegate_facts: true
#   when: item in hostvars
# - debug:
#     msg: "{% set cdata = hostvars.get(item, {}) %}{{cdata.get('corpusops_network_live_vars', {}).get('ext_ip', None)}}"
#   delegate_to: "{{item}}"
#   delegate_facts: true
#   when: item in hostvars
- debug:
    msg: "{% set cdata = hostvars.get(item, {}) %}{{(
         cdata.get('public_ips', []) +
         [cdata.get('public_ip', None),
          cdata.get('corpusops_network_live_vars', {}).get('ext_ip', None)])
        |copsf_uniquify}}"
  delegate_to: "{{item}}"
  delegate_facts: true
  when: item in hostvars
  register: burppublicips
- include_jinja_vars:
    content:
      _cops_burpfw: |-
        {% set cdata = hostvars.get(item, {}) %}
        {% set res = {
          'name': 'corpusops_'+item,
          'ms_iptables_state': cdata.get(
            'burp_ms_iptables_state', None),
          'restrict_ips': cdata.get('burp_restrict_ips', [])} %}
        {% set bips = cdata.get('burp_client_ips', '') %}
        {% set bip = cdata.get('burp_client_ip', '') %}
        {% if bip %}
        {%  set _ = res.restrict_ips.append(bip) %}
        {% endif %}
        {% if bips %}
        {%  set _ = res.restrict_ips.extends(bips) %}
        {% endif %}
        {% if not (bip or bips) %}
        {%  for ip in (burppublicips.msg or []) %}
        {%    if ip is not none %}
        {%      set _ = res.restrict_ips.append(ip) %}
        {%    endif %}
        {%  endfor %}
        {% endif %}
        {% set _ = res.update({'restrict_ips': res.restrict_ips|copsf_uniquify}) %}
        {{ res | to_json }}
- include_role: {name: corpusops.roles/burp_fw}
  when: "_cops_burpfw.restrict_ips|copsf_bool"
