---
- hosts: all
  roles:
    - {name: corpusops.roles/services_db_postgresql_vars}
- hosts: all
  roles:
    - {name: corpusops.roles/services_db_postgresql,
       tags: setup}
- hosts: all
  tasks:
    - shell: |
        set -ex
        dropdb "{{item}}" || /bin/true
        createdb "{{item}}"
      become: true
      become_user: "postgres"
      loop:
        - postgresql_install_postgis_db1
    - name: include1
      include_role:
        name: corpusops.roles/postgresql_install_postgis
      vars:
        _cops_postgresql_install_postgis:
          db: "postgresql_install_postgis_db1"
          become: true
          become_user: "postgres"
    - block:
        - name: include2
          include_role:
            name: corpusops.roles/postgresql_install_postgis
          vars:
            _cops_postgresql_install_postgis:
              db: "postgresql_install_postgis_dbfai1"
              become: false
      rescue:
        - debug:
            msg: |-
              {% set ret = {'a': False} %}
              {% for item in cops_postgresql_extensions_ret.results %}
              {% if item.failed %}
              {% set _ = ret.update({'a': True}) %}
              {% endif %}
              {% endfor %}
              {{ret|to_json}}
          register: mytest2
        - debug:
            msg: "assert {{mytest2}} true"
          failed_when: "not mytest2"
