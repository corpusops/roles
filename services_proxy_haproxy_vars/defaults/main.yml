---
corpusops_services_proxy_haproxy_cops_do_format_resolve: true
corpusops_services_proxy_haproxy_cops_computed_defaults: []
corpusops_services_proxy_haproxy_cops_flavors: ['ubuntu', 'debian', 'redhat', 'default']
corpusops_services_proxy_haproxy_cops_sub_os_append: {}
corpusops_services_proxy_haproxy_cops_lowered: ['repo']
corpusops_services_proxy_haproxy_cops_knobs: [
  'files', 'filescopy', 'configs', 'packages', 'services',
  'repo_keys', 'repo_keys_url', 'repo']
corpusops_services_proxy_haproxy_cops_sub_namespaces:
  ssl: {}
  config:
    global: {}
    default:
      options: {}
      timeout: {}
  defaults: {}
  stats: {}
#
corpusops_services_proxy_haproxy_use_ppa: "{% if ansible_os_family.lower() in ['debian']%}True{%else%}False{%endif%}"
corpusops_services_proxy_haproxy_no_ipv6: false
corpusops_services_proxy_haproxy__version: "1.8"
corpusops_services_proxy_haproxy_version: "{% if corpusops_services_proxy_haproxy_use_ppa%}{{corpusops_services_proxy_haproxy__version}}{%else%}{%endif%}"
corpusops_services_proxy_haproxy_name: haproxy
corpusops_services_proxy_haproxy_activated: True
corpusops_services_proxy_haproxy_disabled: "{{not corpusops_services_proxy_haproxy_activated}}"
corpusops_services_proxy_haproxy_repo_keys_url: null
corpusops_services_proxy_haproxy_repo_keys: null
corpusops_services_proxy_haproxy_repo_keys_default: []
corpusops_services_proxy_haproxy_keyserver: "{{corpusops_vars.hkp_keyserver}}"
corpusops_services_proxy_haproxy_repo: null
corpusops_services_proxy_haproxy_repo_debian: "ppa:vbernat/{name}-{version}"
corpusops_services_proxy_haproxy_packages: null
corpusops_services_proxy_haproxy_packages_default: ['{name}']
corpusops_services_proxy_haproxy_services: null
corpusops_services_proxy_haproxy_group: '{user}'
corpusops_services_proxy_haproxy_user: '{name}'
corpusops_services_proxy_haproxy_services_default: ['{name}']
corpusops_services_proxy_haproxy_files: null
corpusops_services_proxy_haproxy_filescopy: null
corpusops_services_proxy_haproxy_filescopy_default: []
corpusops_services_proxy_haproxy_files_apt: []
corpusops_services_proxy_haproxy_files_default:
  - {path: "{{corpusops_vars.confdefault_dir}}",
     owner: root, group: root, state: directory, mode: "0755"}
  - {path: "{{corpusops_vars.config_dir}}/systemd/system",
     owner: root, group: root, state: directory, mode: "0755"}
  - {path: "{{corpusops_vars.config_dir}}/logrotate.d",
     owner: root, group: root, state: directory, mode: "0755"}
  - {path: "{crt_dir}",
     owner: root, group: root, state: directory, mode: "0755"}
  - {path: "{prefix}",
     owner: root, group: root, state: directory, mode: "0755"}
  - {path: "{prefix}/cfg.d",
     owner: root, group: root, state: directory, mode: "0755"}
  - {path: "{prefix}/errors",
     owner: root, group: root, state: directory, mode: "0755"} 
  - {path: "{selfsignedcert_dir}",
     owner: root, group: root, state: directory, mode: "0755"} 
  - {path: "{{corpusops_vars.usr_dir}}/bin",
     owner: root, group: root, state: directory, mode: "0755"}
  - {path: "{{corpusops_vars.config_dir}}/init.d",
     owner: root, group: root, state: directory, mode: "0755"}
corpusops_services_proxy_haproxy_configs: null
corpusops_services_proxy_haproxy_configs_default:
  - {name: "{config_file}",
     template: "../templates/etc/haproxy/haproxy.cfg",
     owner: "{user}", group: root, mode: "0640"}
  - {name: "{prefix}/errors/403.http",
     template: "../templates/etc/haproxy/errors/403.http",
     owner: root, group: root, mode: "0644"}
  - {name: "{prefix}/errors/408.http",
     template: "../templates/etc/haproxy/errors/408.http",
     owner: root, group: root, mode: "0644"}
  - {name: "{prefix}/errors/500.http",
     template: "../templates/etc/haproxy/errors/500.http",
     owner: root, group: root, mode: "0644"}
  - {name: "{prefix}/errors/502.http",
     template: "../templates/etc/haproxy/errors/502.http",
     owner: root, group: root, mode: "0644"}
  - {name: "{prefix}/errors/503.http",
     template: "../templates/etc/haproxy/errors/503.http",
     owner: root, group: root, mode: "0644"}
  - {name: "{prefix}/errors/504.http",
     template: "../templates/etc/haproxy/errors/504.http",
     owner: root, group: root, mode: "0644"}
  - {name: "{{corpusops_vars.usr_dir}}/bin/cops_haproxy_wrapper.sh",
     template: "../templates/usr/bin/cops_haproxy_wrapper.sh",
     owner: root, group: root, mode: "0755"}
  - {name: "{{corpusops_vars.config_dir}}/logrotate.d/{name}",
     template: "../templates/etc/logrotate.d/haproxy",
     owner: root, group: root, mode: "0755"}
  - {name: "{{corpusops_vars.config_dir}}/init.d/{name}",
     template: "../templates/etc/init.d/haproxy",
     owner: root, group: root, mode: "0755"}
  - {name: "{{corpusops_vars.config_dir}}/systemd/system/{name}.service",
     template: "../templates/etc/systemd/system/haproxy.service",
     owner: root, group: root, mode: "0755"}
  - {name: "{{corpusops_vars.confdefault_dir}}/{name}",
     template: "../templates/etc/default/haproxy",
     owner: root, group: root, mode: "0755"}
corpusops_services_proxy_haproxy_stats_user: "admin"
corpusops_services_proxy_haproxy_prefix: "{{corpusops_vars.config_dir}}/{name}"
corpusops_services_proxy_haproxy_rotate: "{{corpusops_vars.rotate_days}}"
corpusops_services_proxy_haproxy_config_global_logfacility: 'local0'
# upgrade to info to debug,  activation of keepalive in cloud confs
corpusops_services_proxy_haproxy_config_global_loglevel: 'warning'
corpusops_services_proxy_haproxy_config_global_loghost: '127.0.0.1'
corpusops_services_proxy_haproxy_config_global_nbproc: ''
corpusops_services_proxy_haproxy_config_global_node: "{{ansible_fqdn}}"
corpusops_services_proxy_haproxy_config_global_ulimit: '65536'
corpusops_services_proxy_haproxy_config_global_maxconn: '4096'
corpusops_services_proxy_haproxy_config_global_stats_sock: '{{corpusops_vars.var_run_dir}}/{name}.sock'
corpusops_services_proxy_haproxy_config_global_stats_sock_lvl: 'admin'
corpusops_services_proxy_haproxy_config_global_daemon: True
corpusops_services_proxy_haproxy_config_global_debug: False
corpusops_services_proxy_haproxy_config_global_quiet: False
corpusops_services_proxy_haproxy_config_global_chroot: ''
corpusops_services_proxy_haproxy_config_default_log: 'global'
corpusops_services_proxy_haproxy_config_default_mode: 'http'
corpusops_services_proxy_haproxy_config_default_retries: '3'
corpusops_services_proxy_haproxy_config_default_maxconn: '2000'
corpusops_services_proxy_haproxy_config_default_options: ['httplog', 'abortonclose', 'redispatch', 'dontlognull']
corpusops_services_proxy_haproxy_config_default_timeout_connect: '7s'
corpusops_services_proxy_haproxy_config_default_timeout_queue: '15s'
corpusops_services_proxy_haproxy_config_default_timeout_client: '300s'
corpusops_services_proxy_haproxy_config_default_timeout_server: '300s'
# set bind to null to deactivate the stats listener
corpusops_services_proxy_haproxy_stats_bind: ":1936"
corpusops_services_proxy_haproxy_stats_raw_opts:
  - "stats enable"
  - "stats hide-version"
  - "stats uri /"
  - "stats refresh 5s"
  - "stats realm haproxy\ statistics stats auth {stats_user}:{stats_password}"
corpusops_services_proxy_haproxy_ssl_frontend_bind_options: "crt {crt_dir}"
corpusops_services_proxy_haproxy_ssl_bind_options: "no-sslv3 no-tls-tickets"
corpusops_services_proxy_haproxy_ssl_server_bind_options: "no-sslv3 no-tls-tickets"
corpusops_services_proxy_haproxy_ssl_bind_ciphers: "{ciphers}"
corpusops_services_proxy_haproxy_ssl_server_bind_ciphers: "{ciphers}"
corpusops_services_proxy_haproxy_ciphers: "{{(
  'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:'
  'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:'
  'DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:'
  'ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:'
  'ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384'
  ':ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:'
  'DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:'
  'DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:'
  'AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:'
  'AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:'
  '!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:'
  '!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA')}}"
corpusops_services_proxy_haproxy_main_cert: "{crt_dir}/main.crt"
corpusops_services_proxy_haproxy_bind_ciphers: "{ciphers}"
corpusops_services_proxy_haproxy_server_bind_ciphers: "{ciphers}"
corpusops_services_proxy_haproxy_config_file: "{prefix}/haproxy.cfg"
corpusops_services_proxy_haproxy_maincert_crt: ""
corpusops_services_proxy_haproxy_maincert_path: "{crt_dir}/maincert.pem"
corpusops_services_proxy_haproxy_selfsignedcert_dir: "{{corpusops_vars.ssl_config_dir}}/haproxy/selfsigned"
corpusops_services_proxy_haproxy_selfsignedcert_s: "/C=US/ST=Oregon/L=Portland/O=IT/"
corpusops_services_proxy_haproxy_selfsignedcert_d: "365000"
corpusops_services_proxy_haproxy_selfsignedcert_cns: [haproxy, "{{ansible_fqdn}}"]
corpusops_services_proxy_haproxy_use_rsyslog: False
corpusops_services_proxy_haproxy_defaults_extra_opts: ""
corpusops_services_proxy_haproxy_defaults_enabled: 1
corpusops_services_proxy_haproxy_crt_dir: "{{corpusops_vars.ssl_config_dir}}/haproxy/certs"
#
corpusops_services_proxy_haproxy_default_stats_password: null
corpusops_services_proxy_haproxy_stats_password: "{default_stats_password}"
corpusops_services_proxy_haproxy_stats_enabled: true
corpusops_services_proxy_haproxy_reverse_proxy_addresses: "{{corpusops_network_settings_vars.reverse_proxy.addresses}}"
corpusops_services_proxy_haproxy_service_state: loaded
