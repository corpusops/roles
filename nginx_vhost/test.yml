---
- hosts: all
  vars:
    corpusops_services_http_nginx_default_vhost_is_default_server: false
  tasks:
    - file: {path: "{{item}}", state: absent}
      with_items:
        - "/etc/nginx/conf.d/foobar.conf"
        - "/etc/nginx/conf.d/trucmuche.conf"
        - "/etc/nginx/sites-available/default.conf"
        - "/etc/nginx/sites-available/foobar.conf"
        - "/etc/nginx/sites-available/foomuche.conf"
        - "/etc/nginx/conf.d/foomuche.conf"
    - include_role: {name: corpusops.roles/nginx_vhost}
      vars:
        corpusops_nginx_vhost_basename: foobar
        corpusops_nginx_vhost_domain: foobar
        corpusops_nginx_vhost_check_config: false
    - include_role: {name: corpusops.roles/nginx_vhost}
      vars:
        corpusops_nginx_vhost_domain: trucmuche
        corpusops_nginx_vhost_basename: trucmuche
        corpusops_nginx_vhost_is_default_server: true
        corpusops_nginx_vhost_check_config: false
    - include_role: {name: corpusops.roles/nginx_vhost}
      vars:
        _corpusops_nginx_vhost:
          domain: foomuche
          basename: foomuche
          is_default_server: true
          check_config: false
    - include_role: {name: corpusops.roles/nginx_control}
      vars: {corpusops_nginx_control_state: restarted}
      tags: [control]
    - stat: "path={{item}}"
      register: nginx_test_files
      with_items:
        - "/etc/nginx/conf.d/foobar.conf"
        - "/etc/nginx/conf.d/trucmuche.conf"
        - "/etc/nginx/sites-available/foobar.conf"
        - "/etc/nginx/sites-available/trucmuche.conf"
        - "/etc/nginx/sites-available/foomuche.conf"
        - "/etc/nginx/conf.d/foomuche.conf"
    - debug:
        msg: |
             {% set ret = {"r": True} %}
             {% for a in nginx_test_files.results %}
             {% if not a.stat.exists %}
             {% set _ = ret.update({"r": False}) %}
             {% endif %}
             {% endfor %}
             {{ ret | to_json }}
      register: tnginx_test_files
      failed_when: "not tnginx_test_files.msg.r"
