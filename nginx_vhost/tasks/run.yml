---
- name: files
  file:
    path: "{{item.path.format(**vars)}}"
    state: "{{item.state|default(omit)}}"
    src: "{{item.get('src', False) and item.get('src', False).format(**vars) or omit}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    recurse: "{{item.recurse|default(omit)}}"
  with_items: "{{corpusops_nginx_vhost_vars.files}}"
  when: "(corpusops_nginx_vhost_vars.files is not none and
          corpusops_nginx_vhost_vars.files|length > 0)"
- name: configs
  template:
    src: "{{(item.template
            | default('../templates/'+item.name)).format(**vars)}}"
    dest: "{{item.name.format(**vars)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: false
  with_items: "{{corpusops_nginx_vhost_vars.configs}}"
  when: "(corpusops_nginx_vhost_vars.configs is not none and
          corpusops_nginx_vhost_vars.configs|length > 0)"
- name: install conf.d link
  file:
    path: "{{corpusops_nginx_vhost_site_link.format(**vars)}}"
    src: "{{corpusops_nginx_vhost_site_file.format(**vars)}}"
    state: >-
      {%- if corpusops_nginx_vhost_vars.install-%}link
      {%- else-%}absent
      {%- endif -%}
- name: Check nginx configs
  shell: /usr/bin/ansibleNginxConfCheck.sh
  changed_when: false
  when: "corpusops_nginx_vhost_vars.check_config"
