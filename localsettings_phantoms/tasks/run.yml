---
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    package: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_phantoms_vars.packages is not none and
          corpusops_localsettings_phantoms_vars.packages|length > 0)"
  with_items: "{{corpusops_localsettings_phantoms_vars.packages}}"
- name: update & install prerequisites
  package:
    update_cache: yes
    package: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_localsettings_phantoms_vars.packages is not none and
          corpusops_localsettings_phantoms_vars.packages|length > 0)"
  with_items: "{{corpusops_localsettings_phantoms_vars.packages}}"
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  with_items: "{{corpusops_localsettings_phantoms_vars.files}}"
  when: "(corpusops_localsettings_phantoms_vars.files is not none and
          corpusops_localsettings_phantoms_vars.files|length > 0)"
- name: configs
  template:
    src: "{{item.src|default('../templates/'+item.name)}}"
    dest: "{{item.dest|default(item.name)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  with_items: "{{corpusops_localsettings_phantoms_vars.configs}}"
  when: "(corpusops_localsettings_phantoms_vars.configs is not none and
          corpusops_localsettings_phantoms_vars.configs|length > 0)"
- debug:
    msg:
      _archive:
        filetest: "{{corpusops_localsettings_phantoms_phantomjs_filetest}}"
        archive: "{{corpusops_localsettings_phantoms_phantomjs_archive}}"
        app_path: "{{corpusops_localsettings_phantoms_phantomjs_app_path}}"
        urls:
          archive_crc: "{{corpusops_localsettings_phantoms_phantomjs_urls.archive_crc}}"
          archive: "{{corpusops_localsettings_phantoms_phantomjs_urls.archive}}"
          verify_sha256: "{{corpusops_localsettings_phantoms_phantomjs_urls.verify_sha256}}"
  vars:
    version: "{{corpusops_localsettings_phantoms_phantomjs_version}}"
  register: corpusops_localsettings_phantoms_archive
- include_role: {name: corpusops.roles/install_archive}
  vars: {_archive: "{{corpusops_localsettings_phantoms_archive.msg._archive}}"}
- name: files
  file:
    path: "{{item}}"
    state: "directory"
    mode: "755"
  with_items: "{{[corpusops_localsettings_phantoms_casperjs_app_path]}}"
- shell: |
    cd {{corpusops_localsettings_phantoms_casperjs_app_path}}
    yarn add --non-interactive casperjs@{{corpusops_localsettings_phantoms_casperjs_version}}
  register: corpusops_localsettings_phantoms_casperjsinstall
  changed_when: "'0 new' not in corpusops_localsettings_phantoms_casperjsinstall.stdout"
- include_role: {name: corpusops.roles/set_alternatives}
  vars:
    version: "{{corpusops_localsettings_phantoms_vars.version}}"
    alternatives: "{{_corpusops_localsettings_phantoms_alternatives}}"
  when: "corpusops_localsettings_phantoms_vars.version is not none"
