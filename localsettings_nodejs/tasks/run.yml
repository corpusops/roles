---
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    package: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_nodejs_vars.packages is not none and
          corpusops_localsettings_nodejs_vars.packages|length > 0)"
  with_items: "{{corpusops_localsettings_nodejs_vars.packages}}"
- name: update & install prerequisites
  package:
    update_cache: yes
    package: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_localsettings_nodejs_vars.packages is not none and
          corpusops_localsettings_nodejs_vars.packages|length > 0)"
  with_items: "{{corpusops_localsettings_nodejs_vars.packages}}"
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  with_items: "{{corpusops_localsettings_nodejs_vars.files}}"
  when: "(corpusops_localsettings_nodejs_vars.files is not none and
          corpusops_localsettings_nodejs_vars.files|length > 0)"
- name: configs
  template:
    src: "{{item.src|default('../templates/'+item.name)}}"
    dest: "{{item.dest|default(item.name)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  with_items: "{{corpusops_localsettings_nodejs_vars.configs}}"
  when: "(corpusops_localsettings_nodejs_vars.configs is not none and
          corpusops_localsettings_nodejs_vars.configs|length > 0)"
- include_role: {name: corpusops.roles/install_archive}
  vars:
    version: "{{item}}"
    archive:
      filetest: "{{corpusops_localsettings_nodejs_vars.filetest}}"
      archive: "{{_corpusops_localsettings_nodejs_archive}}"
      app_path: "{{_corpusops_localsettings_nodejs_app_path}}"
      urls:
        archive_crc: "{{_corpusops_localsettings_nodejs_urls.archive_crc}}"
        archive: "{{_corpusops_localsettings_nodejs_urls.archive}}"
        verify_sha256: "{{_corpusops_localsettings_nodejs_urls.verify_sha256}}"
  with_items: "{{corpusops_localsettings_nodejs_vars.versions}}"
- include_role: {name: corpusops.roles/install_archive}
  vars:
    version: "{{item}}"
    archive:
      filetest: "{{corpusops_localsettings_nodejs_vars.yarn_filetest}}"
      archive: "{{corpusops_localsettings_nodejs_yarn_archive}}"
      app_path: "{{corpusops_localsettings_nodejs_yarn_app_path}}"
      urls:
        archive: "{{corpusops_localsettings_nodejs_yarn_urls.archive}}"
        archive_crc: "{{corpusops_localsettings_nodejs_yarn_urls.archive_crc}}"
        verify_gpg: "{{corpusops_localsettings_nodejs_yarn_urls.verify_gpg}}"
  with_items: "{{[corpusops_localsettings_nodejs_vars.yarn_version]}}"
- include: "../../include/tasks/set_alternatives.yml"
  vars: {version: "{{corpusops_localsettings_nodejs_vars.version}}"}
  with_dict: "{{_corpusops_localsettings_nodejs_alternatives}}"
  when: "corpusops_localsettings_nodejs_vars.version is not none"
