---
- name: update & install prerequisites
  apt:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: '{{corpusops_localsettings_profile_vars.packages}}'
    state: present
  when: "(ansible_os_family == 'Debian' and
          corpusops_localsettings_profile_vars.packages is not none and
          corpusops_localsettings_profile_vars.packages|length > 0)"
  tags: corpusops_localsettings_profile
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  loop: "{{corpusops_localsettings_profile_vars.files|flatten(levels=1)}}"
  when: "(corpusops_localsettings_profile_vars.files is not none and
          corpusops_localsettings_profile_vars.files|length > 0)"
  tags: corpusops_localsettings_profile
- name: configs
  template:
    src: "../templates/{{item.name}}"
    dest: "{{item.name}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: "{{item.trim_blocks|default(False)}}"
  loop: "{{corpusops_localsettings_profile_vars.configs|flatten(levels=1)}}"
  when: "(corpusops_localsettings_profile_vars.configs is not none and
          corpusops_localsettings_profile_vars.configs|length > 0)"
  tags: corpusops_localsettings_profile
- shell: grep -E 'profile\.d' /etc/profile | grep -v 'via ansible' | grep -E 'profile\.d'
  register: corpusops_localsettings_profile_hasblock
  tags: corpusops_localsettings_profile
  changed_when: False
  failed_when: False
- blockinfile:
    dest: /etc/profile
    marker: "# {mark} load profile.d via ansible"
    insertafter: EOF
    block: |
      if [ -d /etc/profile.d ]; then
        for i in /etc/profile.d/*.sh; do
          if [ -r $i ]; then
            . $i
          fi
        done
        unset i
      fi
  tags: corpusops_localsettings_profile
  when: 'corpusops_localsettings_profile_hasblock is failed'
