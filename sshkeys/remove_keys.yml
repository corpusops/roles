---
# corpusops_ssh_keys_map:
#   aaa:
#     - "ssh-rsa AAAAbbb== aaa@aaa"
# corpusops_ssh_added_keys_map_: |-
#   foo.bar.net: [aaa, bbb,ccc]
# corpusops_ssh_added_keys_map: "{{(corpusops_ssh_added_keys_map_|from_yaml|to_json).strip()}}"
# $COPS_ROOT/bin/ansible-playbook -vvv  -i inv remove_sshkeys.yml   -e "{to_remove: [aaa]}"
- hosts: localhost
  gather_facts: false
  roles: [corpusops.roles/ansible_plugins]
  tasks:
    - debug:
        msg:
          corpusops_ssh_added_keys_map: "{{corpusops_ssh_added_keys_map}}"
          corpusops_ssh_keys_map: "{{corpusops_ssh_keys_map}}"
      register: _c_ssh
      no_log: "not cops_ssh_debug|default(false)"
      connection: local
    - connection: local
      set_fact:
        _c_removesshkeys: |-
          {% set to_remove = to_remove|default([]) %}
          {% set hs = [] %}
          {% set s = {} %}
          {% for i in groups['all'] %}
          {%  set _ = hs.append(i) %}
          {% endfor %}
          {% for h in hs %}
          {%  set m = _c_ssh.msg.corpusops_ssh_added_keys_map.get(h, []) %}
          {%  for i in to_remove %}
          {%    if i in m %}
          {%      set rm = s.setdefault(
                    h, {}
                  ).setdefault('removed', {}
                  ).setdefault('root', {'mode': 'all', 'ssh_keys': []}
                  ).ssh_keys %}
          {%      set keys = _c_ssh.msg.corpusops_ssh_keys_map.get(i, []) %}
          {%      for sk in keys %}
          {%        set k = {'key': sk, 'remove_for_all': true} %}
          {%        if k not in rm %}
          {%          set _ = rm.append(k) %}
          {%        endif %}
          {%      endfor %}
          {%    endif %}
          {%  endfor %}
          {% endfor %}
          {{ s | to_json }}
- hosts: "{{hostvars.localhost._c_removesshkeys.keys()}}"
  tasks:
  - include_role: {name: corpusops.roles/sshkeys}
    vars:
      _cops_sshkeys: "{{
          hostvars.localhost._c_removesshkeys[inventory_hostname]}}"

