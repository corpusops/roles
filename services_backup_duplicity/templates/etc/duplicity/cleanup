#!/bin/bash
#{% set use_innerdirs = duplicity_profile.use_innerdirs|default(False)  %}
#{% set burp2 = duplicity_profile.burp2|default(False)  %}
#{% set multi = use_innerdirs or burp2 %}
set -e


cd "$(dirname $(readlink -f "$0"))"
. {{duplicity_profile_name}}-env
{{duplicity_profile.cleanup_slug}}


dupli() {
    local dir="$1"
    local url="${BACKUP_DEST}/${1}"
    local log_file="${LOG_DIR}/${1//\//_}.log"
    local ret=0
    if [ ! -e "$LOG_DIR" ];then mkdir -pv ${LOG_DIR};fi
    set +e
    {% for i in duplicity_profile.clean_cmd.splitlines() %}{% if i.strip()%}
    if ! ( {{i.strip()}} {{duplicity_profile.args.strip()}} --force "${url}" );then ret=1;fi
    {%endif%}{% endfor %}
    set -e
    return $ret
}

rundupli() {
    log "run duplicity(delete) in $(pwd)"
    if !(dupli "$(pwd)");then log "backup for $i failed";ret=$(($ret+1));fi
}


ret=0
cwd="$(pwd)"

if [ -e $BACKUP_STATE ];then
    START_DT_MIN=$(($(date +%s) - $DUPLICITY_MAX_BACKUP_SECONDS))
    STATE_DATE=$(stat -L --format %Y "$BACKUP_STATE")
    to_kill="" is_running=""
    for i in $(get_pids);do
        if (kill -0 $i &>/dev/null);then is_running="1";fi
    done
    if [ $STATE_DATE -le $START_DT_MIN ];then to_kill="1";fi
    if [[ -z $is_running ]];then to_kill="1";fi
    if [[ -n $to_kill ]];then kill_backups;fi
fi
if [ -e $BACKUP_STATE ];then echo "delete backup in process (rm $BACKUP_STATE), bailing out";exit 3;fi
mark_state
echo "pid:$$" >> "$BACKUP_STATE"
if [[ -n "$@" ]];then
    for f in "$@";do
        if [ -d "$f" ];then
            cd "$f"
            rundupli
            cd "$cwd"
        fi
    done
    cd "$cwd"
else
    for i in {% for j in duplicity_profile.dirs%} "{{j}}"{%endfor%};do
        if [ ! -e "$i" ];then mkdir -p "$i";fi
        cd "$i"
        {% if multi %}
        while read f;do
            if [ -d "$f" ];then
                cd "$f"
                rundupli
                cd "$cwd"
            fi
        done < <(ls -1d "$(pwd)"/*{% if burp2 %}/current{%endif%})
        {% else %}
        rundupli
        {% endif %}
        cd "$cwd"
    done
    {% if multi %}
    for i in {% for j in duplicity_profile.dirs%} "{{j}}_inner"{%endfor%};do
        if [ ! -e "$i" ];then mkdir -p "$i";fi
        cd "$i"
        while read f;do
            if [ -d "$f" ];then
                cd "$f"
                rundupli
                cd "$cwd"
            fi
        done < <(ls -1d "$(pwd)"/*/*)
        cd "$cwd"
    done
fi
{% endif %}
delete_state
exit $ret

