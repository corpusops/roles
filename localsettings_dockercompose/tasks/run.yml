---
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: "{{corpusops_localsettings_dockercompose_vars.packages|flatten(levels=1)}}"
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_localsettings_dockercompose_vars.packages is not none and
          corpusops_localsettings_dockercompose_vars.packages|length > 0)"
- name: update & install prerequisites
  package:
    update_cache: yes
    name: "{{corpusops_localsettings_dockercompose_vars.packages|flatten(levels=1)}}"
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_localsettings_dockercompose_vars.packages is not none and
          corpusops_localsettings_dockercompose_vars.packages|length > 0)"
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
  loop: "{{corpusops_localsettings_dockercompose_vars.files|flatten(levels=1)}}"
  when: "(corpusops_localsettings_dockercompose_vars.files is not none and
          corpusops_localsettings_dockercompose_vars.files|length > 0)"
- name: configs
  template:
    src: "{{item.src|default('../templates/'+item.name)}}"
    dest: "{{item.dest|default(item.name)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: "{{item.trim_blocks|default(False)}}"
  loop: "{{corpusops_localsettings_dockercompose_vars.configs|flatten(levels=1)}}"
  when: "(corpusops_localsettings_dockercompose_vars.configs is not none and
          corpusops_localsettings_dockercompose_vars.configs|length > 0)"
- block:
  - name: Either install docker compose v1
    include_tasks: v1.yml
    when: "corpusops_localsettings_dockercompose_version.split('.')[0]|int < 2"
  - name: Or install docker compose v2
    include_tasks: v2.yml
    when: "corpusops_localsettings_dockercompose_version.split('.')[0]|int >= 2"
