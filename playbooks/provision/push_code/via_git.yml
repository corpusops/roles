---
- block:
  - name: "git repo: deploy code container inside the target environment"
    delegate_to: "{{__cops_provision_push_code_vars.origin}}"
    stat:
      path: "{{__cops_provision_push_code_vars.src}}/{{__cops_provision_push_code_vars.git_folder}}"
    register: cops_sync_code_push_code_git_head
    changed_when: false
  - name: "git repo: test folder"
    assert:
      msg: not a git folder
      that: cops_sync_code_push_code_git_head.stat.exists
    changed_when: false
  - name: "git repo: get commit"
    shell: |
        set -ex
        cd  "{{__cops_provision_push_code_vars.src}}"
        git log -1 --format="%H"
    delegate_to: "{{__cops_provision_push_code_vars.origin}}"
    register: cops_sync_code_push_code_git_commitc
    when: cops_sync_code_push_code_git_head.stat.exists
    changed_when: false
  - set_fact:
      cacheable: false
      cops_sync_code_push_code_git_commit: "{{cops_sync_code_push_code_git_commitc.stdout.strip()}}"
- when: not __cops_provision_push_code_vars.is_submodule
  block:
  - name: "git repo: ensure commit"
    assert:
      msg: "Can't get git commit in {{__cops_provision_push_code_vars.src}}"
      that:
        - cops_sync_code_push_code_git_commit|length == 40
    changed_when: false
  - name: "git repo: test if deploy code container inside the target environment exists"
    stat:
      path: "{{__cops_provision_push_code_vars.dest}}/{{__cops_provision_push_code_vars.git_folder}}/config"
    changed_when: false
    failed_when: false
    register: cops_sync_code_push_code_remote_git_folder
  - when: not cops_sync_code_push_code_remote_git_folder.stat.exists
    block:
    - set_fact:
        cacheable: false
        cops_sync_code_push_code_git_dest_commit_pre: ""
  - when: cops_sync_code_push_code_remote_git_folder.stat.exists
    block:
    - name: "git remote repo: get commit"
      shell: |
          set -ex
          cd  "{{__cops_provision_push_code_vars.dest}}/{{__cops_provision_push_code_vars.git_folder}}/"
          git log -1 --format="%H" HEAD || echo "NOCOMMIT" >&2
      register: cops_sync_code_push_code_git_dest_commit_prec
      changed_when: false
    - set_fact:
        cacheable: false
        cops_sync_code_push_code_git_dest_commit_pre: "{{cops_sync_code_push_code_git_dest_commit_prec.stdout.strip()}}"
  - when: (__cops_provision_push_code_vars.force_sync and cops_sync_code_push_code_git_head.stat.isdir)
    block:
    - name: "git file sync: deploy code container inside the target environment"
      file:
        state: directory
        path: "{{d}}"
        owner: "{{__cops_provision_push_code_vars.owner}}"
        group: "{{__cops_provision_push_code_vars.group}}"
      changed_when: False
      loop_control: {loop_var: d}
      with_items: ["{{__cops_provision_push_code_vars.dest}}/{{__cops_provision_push_code_vars.git_folder}}"]
    - name: "git file sync: synchronise files inside the environment (deleguation)"
      delegate_to: "{{__cops_provision_push_code_vars.origin}}"
      synchronize:
        compress: false
        ssh_args: "{{__cops_provision_push_code_vars.ssh_args}}"
        src: "{{__cops_provision_push_code_vars.src}}/{{__cops_provision_push_code_vars.git_folder}}/"
        dest: "{{__cops_provision_push_code_vars.dest}}/{{__cops_provision_push_code_vars.git_folder}}/"
        rsync_opts: "{{__cops_provision_push_code_vars.git_rsync_opts}}"
      when: not __cops_provision_push_code_vars.origin in ['localhost']
    - name: "git file sync: synchronise files inside the environment"
      synchronize:
        compress: false
        ssh_args: "{{__cops_provision_push_code_vars.ssh_args}}"
        src: "{{__cops_provision_push_code_vars.src}}/{{__cops_provision_push_code_vars.git_folder}}/"
        dest: "{{__cops_provision_push_code_vars.dest}}/{{__cops_provision_push_code_vars.git_folder}}/"
        rsync_opts: "{{__cops_provision_push_code_vars.git_rsync_opts}}"
      when: __cops_provision_push_code_vars.origin in ['localhost']
  - when: (__cops_provision_push_code_vars.force_sync)
    block:
    - name: "git remote repo: Stash previous changes if any"
      shell: |-
          set -ex;
          cd  "{{__cops_provision_push_code_vars.dest}}";
          if ! ( git stash; );then echo nothing to stack >&2;fi;
      register: cops_sync_code_push_code_git_commit_stash
      changed_when: false
    - name: "git remote repo: Reset to wanted commit"
      shell: |-
          set -ex;
          cd  "{{__cops_provision_push_code_vars.dest}}";
          git reset --hard "{{cops_sync_code_push_code_git_commit}}";
      register: cops_sync_code_push_code_git_commit_reset
      changed_when: false
  - name: "git remote repo: Ask current commit"
    shell: |
        set -ex
        cd  "{{__cops_provision_push_code_vars.dest}}"
        git show -s --format=%H
    register: cops_sync_code_push_code_git_dest_commitc
    changed_when: false
  - set_fact:
      cacheable: false
      cops_sync_code_push_code_git_dest_commit: "{{cops_sync_code_push_code_git_dest_commitc.stdout.strip()}}"
  - name: "git remote repo: Test everything is in order and may have changed (code updated)"
    assert:
      msg: "Can't get dest git commit in {{__cops_provision_push_code_vars.dest}}"
      that:
        - cops_sync_code_push_code_git_dest_commit|length == 40
    changed_when: "(cops_sync_code_push_code_git_dest_commit != cops_sync_code_push_code_git_dest_commit_pre)"
- when: __cops_provision_push_code_vars.is_submodule
  block:
  - name: "git submodule repo: test if deploy code container inside the target environment exists"
    stat:
      path: "{{__cops_provision_push_code_vars.dest}}"
    changed_when: false
    failed_when: false
    register: cops_sync_code_push_code_remote_git_folder
  - when: not cops_sync_code_push_code_remote_git_folder.stat.exists
    block:
    - set_fact:
        cacheable: false
        cops_sync_code_push_code_git_dest_commit_pre: ""
  - when:  cops_sync_code_push_code_remote_git_folder.stat.exists
    block:
    - name: "git remote submodule: Save previous distant commit"
      shell: |
          set -ex
          cd  "{{__cops_provision_push_code_vars.dest}}"
          git log -1 --format="%H"
      register: cops_sync_code_push_code_git_dest_commit_prec
      changed_when: false
    - set_fact:
        cacheable: false
        cops_sync_code_push_code_git_dest_commit_pre: "{{cops_sync_code_push_code_git_dest_commit_prec.stdout.strip()}}"
    - name: "git remote submodule: Stash previous changes if any"
      shell: |-
          set -ex;
          cd  "{{__cops_provision_push_code_vars.dest}}";
          if ! ( git stash; );then echo nothing to stack >&2;fi;
      register: cops_sync_code_push_code_git_commit_stash
      changed_when: false
  - name: "git remote submodule: Update submodule"
    shell: |
        set -ex
        cd  "{{__cops_provision_push_code_vars.parent_dest}}"
        git submodule update \
            {{__cops_provision_push_code_vars.update_opts.strip()}} \
            "{{__cops_provision_push_code_vars.path}}"
    register: cops_sync_code_push_code_git_update_submodule
    changed_when: false
  - name: "git remote submodule: Ask current commit"
    shell: |
        set -ex
        cd  "{{__cops_provision_push_code_vars.dest}}"
        git show -s --format=%H
    register: cops_sync_code_push_code_git_dest_commitc
    changed_when: false
  - set_fact:
      cacheable: false
      cops_sync_code_push_code_git_dest_commit: "{{cops_sync_code_push_code_git_dest_commitc.stdout.strip()}}"
  - name: "git remote submodule: Test everything is in order and may have changed (code updated)"
    assert:
      msg: "Can't get dest git commit in {{__cops_provision_push_code_vars.dest}}"
      that:
        - cops_sync_code_push_code_git_dest_commit|length == 40
    changed_when: "(cops_sync_code_push_code_git_dest_commit != cops_sync_code_push_code_git_dest_commit_pre)"
