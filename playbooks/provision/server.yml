---
- hosts: "{{provision_host|default('all')}}"
  roles:
    - role: corpusops.roles/humanlog
    - role: corpusops.roles/vars
  tasks:
    - name: SETUP
      include_jinja_vars:
        content: |
          ---
          {% set vt = corpusops_vars.vt %}
          {% set is_docker    = corpusops_vars.is_docker %}
          {% set is_lxc       = corpusops_vars.is_lxc %}
          {% set is_container = corpusops_vars.is_container %}
          {% set corpusops_localsettings_git = corpusops_localsettings_git
                | default(True) %}
          {% set corpusops_localsettings_screen = corpusops_localsettings_screen
                | default(True) %}
          {% set corpusops_localsettings_pkgmgr = corpusops_localsettings_pkgmgr
                | default(True) %}
          {% set corpusops_localsettings_timezone = corpusops_localsettings_timezone
                | default(True) %}
          {% set corpusops_localsettings_locales = corpusops_localsettings_locales
                | default(True) %}
          {% set corpusops_localsettings_basepkgs = corpusops_localsettings_basepkgs
                | default(True) %}
          {% set corpusops_localsettings_dns_servers = corpusops_localsettings_dns_servers
                | default([]) %}
          {% set corpusops_localsettings_dns_search = corpusops_localsettings_dns_search
                | default([]) %}
          {% set corpusops_localsettings_nodejs = corpusops_localsettings_nodejs
                | default(False) %}
          {% set corpusops_localsettings_packer = corpusops_localsettings_packer
                | default(False) %}
          {% set corpusops_localsettings_phantoms = corpusops_localsettings_phantoms
                | default(False) %}
          {% set corpusops_services_http_nginx = corpusops_services_http_nginx
                | default(False) %}
          {% set corpusops_localsettings_vim = corpusops_localsettings_vim
                | default(not is_docker) %}
          {% set corpusops_localsettings_editor = corpusops_localsettings_editor
                | default(not is_docker) %}
          {% set corpusops_localsettings_sudo = corpusops_localsettings_sudo
                | default(True) %}
          {% set corpusops_localsettings_sysctls = corpusops_localsettings_sysctls
                | default(not is_docker) %}
          {% set corpusops_localsettings_etckeeper = not is_docker %}
          {% set corpusops_localsettings_apparmor = corpusops_localsettings_apparmor
              | default(ansible_lsb.id == 'Ubuntu' and not is_container)
              | ternary(True, False) %}
          {% set corpusops_services_base_ssh_server = corpusops_services_base_ssh_server
              | default(True) %}
          {% set corpusops_services_base_ntp = corpusops_services_base_ntp
              | default(not is_container) %}
          {% set corpusops_localsettings_autoupgrades = corpusops_localsettings_autoupgrades
              | default(corpusops_vars.security) %}
          {% set corpusops_services_firewall_fail2ban = corpusops_services_firewall_fail2ban
              | default(corpusops_services_base_ssh_server and corpusops_vars.security)
              | ternary(True, False) %}
          {% set corpusops_localsettings_golang = corpusops_localsettings_golang
                | default(False) %}
          {% set corpusops_localsettings_jdk = corpusops_localsettings_jdk
                | default(False) %}
          {% set corpusops_localsettings_dockercompose = corpusops_localsettings_dockercompose
                | default(False) %}
          {% set corpusops_services_base_sshd = corpusops_services_base_sshd
                | default(not is_docker) %}
          {% set corpusops_services_magicbridge = corpusops_services_magicbridge
                | default(False) %}
          {% set corpusops_services_virt_lxc = corpusops_services_virt_lxc
                | default(False) %}
          {% set corpusops_services_virt_docker = corpusops_services_virt_docker
                | default(False) %}
          {% set corpusops_services_base_cron = corpusops_services_base_cron
                | default(True) %}
          {% set corpusops_services_misc_xvfb = corpusops_services_misc_xvfb
                | default(False) %}
          {% set corpusops_services_db_postgresql_client = corpusops_services_db_postgresql_client
                | default(False) %}
          {% set corpusops_services_db_postgresql_pkgmgr = corpusops_services_db_postgresql_pkgmgr
                | default(False) %}
          {% set corpusops_services_db_postgis = corpusops_services_db_postgis
                | default(False) %}
          {% set corpusops_services_db_postgresql = corpusops_services_db_postgresql
                | default(False) %}
          {% set corpusops_services_misc_robotframework = corpusops_services_misc_robotframework
                | default(False) %}
          {% set corpusops_localsettings_ssh = corpusops_localsettings_ssh
                | default(True) %}
          {% set corpusops_localsettings_profile = corpusops_localsettings_profile
                | default(True) %}
          {% set corpusops_localsettings_nscd = not is_docker %}
          {% set corpusops_localsettings_dns = (
                corpusops_localsettings_dns_servers or
                corpusops_localsettings_dns_search) | length > 0 %}
          corpusops_localsettings_dockercompose: {{ corpusops_localsettings_dockercompose }}
          corpusops_services_db_postgresql_client: {{ corpusops_services_db_postgresql_client }}
          corpusops_services_db_postgresql_pkgmgr: {{ corpusops_services_db_postgresql_pkgmgr }}
          corpusops_services_db_postgresql: {{ corpusops_services_db_postgresql }}
          corpusops_services_db_postgis: {{ corpusops_services_db_postgis }}
          corpusops_localsettings_apparmor: {{ corpusops_localsettings_apparmor }}
          corpusops_localsettings_autoupgrades: {{ corpusops_localsettings_autoupgrades }}
          corpusops_localsettings_basepkgs: {{ corpusops_localsettings_basepkgs }}
          corpusops_localsettings_packer: {{ corpusops_localsettings_packer }}
          corpusops_localsettings_phantoms: {{ corpusops_localsettings_phantoms }}
          corpusops_services_http_nginx: {{ corpusops_services_http_nginx }}
          corpusops_localsettings_nodejs: {{ corpusops_localsettings_nodejs }}
          corpusops_localsettings_dns: {{ corpusops_localsettings_dns }}
          corpusops_localsettings_vim: {{ corpusops_localsettings_vim }}
          corpusops_localsettings_editor: {{ corpusops_localsettings_editor }}
          corpusops_localsettings_etckeeper: {{ corpusops_localsettings_etckeeper }}
          corpusops_localsettings_git: {{ corpusops_localsettings_git }}
          corpusops_localsettings_golang: {{ corpusops_localsettings_golang }}
          corpusops_localsettings_jdk: {{ corpusops_localsettings_jdk }}
          corpusops_localsettings_locales: {{ corpusops_localsettings_locales }}
          corpusops_localsettings_nscd: {{ corpusops_localsettings_nscd }}
          corpusops_localsettings_pkgmgr: {{ corpusops_localsettings_pkgmgr }}
          corpusops_localsettings_profile: {{ corpusops_localsettings_profile }}
          corpusops_localsettings_screen: {{ corpusops_localsettings_screen }}
          corpusops_localsettings_ssh: {{ corpusops_localsettings_ssh }}
          corpusops_localsettings_sudo: {{ corpusops_localsettings_sudo }}
          corpusops_localsettings_sysctls: {{ corpusops_localsettings_sysctls }}
          corpusops_services_base_cron: {{ corpusops_services_base_cron }}
          corpusops_services_base_ntp: {{ corpusops_services_base_ntp }}
          corpusops_services_base_sshd: {{ corpusops_services_base_sshd }}
          corpusops_services_firewall_fail2ban: {{ corpusops_services_firewall_fail2ban }}
          corpusops_services_magicbridge: {{ corpusops_services_magicbridge }}
          corpusops_services_virt_lxc: {{ corpusops_services_virt_lxc }}
          corpusops_services_virt_docker: {{ corpusops_services_virt_docker }}
          corpusops_services_misc_robotframework: {{ corpusops_services_misc_robotframework }}
          corpusops_services_misc_xvfb: {{ corpusops_services_misc_xvfb }}
      tags: corpusops_vars,corpusops_vars_core,corpusops_vars_provision
- hosts: "{{provision_host|default('all')}}"
  roles:
    - role: corpusops.roles/localsettings_dns
    - role: corpusops.roles/localsettings_sysctls
    - role: corpusops.roles/localsettings_pkgmgr
    - role: corpusops.roles/localsettings_locales
    - role: corpusops.roles/localsettings_timezone
    - role: corpusops.roles/localsettings_autoupgrades
    - role: corpusops.roles/localsettings_basepkgs
    - role: corpusops.roles/localsettings_profile
    - role: corpusops.roles/localsettings_apparmor
    - role: corpusops.roles/localsettings_editor
    - role: corpusops.roles/localsettings_etckeeper
    - role: corpusops.roles/localsettings_git
    - role: corpusops.roles/localsettings_dockercompose
    - role: corpusops.roles/localsettings_packer
    - role: corpusops.roles/localsettings_phantoms
    - role: corpusops.roles/localsettings_nodejs
    - role: corpusops.roles/localsettings_golang
    - role: corpusops.roles/localsettings_jdk
    - role: corpusops.roles/localsettings_nscd
    - role: corpusops.roles/localsettings_screen
    - role: corpusops.roles/localsettings_ssh
    - role: corpusops.roles/localsettings_sudo
    - role: corpusops.roles/services_base_ntp
    - role: corpusops.roles/services_base_sshd
    - role: corpusops.roles/services_base_cron
    - role: corpusops.roles/services_magicbridge
    - role: corpusops.roles/services_virt_lxc
    - role: corpusops.roles/services_virt_docker
    - role: corpusops.roles/services_misc_xvfb
    - role: corpusops.roles/services_misc_robotframework
    - role: corpusops.roles/services_http_nginx
    - role: corpusops.roles/services_db_postgresql_client
    - role: corpusops.roles/services_db_postgresql_pkgmgr
    - role: corpusops.roles/services_db_postgresql
    - role: corpusops.roles/services_db_postgis

