---
- include_jinja_vars:
    content: |-
      {%- set prefix = 'corpusops_localsettings_basepkgs_' %}
      {%- set snamespaced, vars = vars|copsf_registry(prefix) %}
      {%- set namespaced = snamespaced[prefix+'vars'] %}
      {%- set aid = ansible_lsb.id.lower() %}
      {%- if aid in ['debian', 'ubuntu'] %}
      {%-  if (aid in ['debian']) or (aid in ['ubuntu'] and corpusops_core_os_release|string|version_compare('13.10', '>' )) %}
      {%-    set _ = namespaced['packages'].append('iproute2') %}
      {%-  endif %}
      {%-  if aid in ['ubuntu'] and corpusops_core_os_release|string|version_compare('15.04', '<' ) %}
      {%-    set _ = namespaced['packages'].append('ubuntu-extras-keyring') %}
      {%-  endif %}
      {%-  if ((aid in ['ubuntu']) and (corpusops_core_os_release|string|copsf_looseversion >= '18.04'|copsf_looseversion))
           or ((aid in ['debian']) and (corpusops_core_os_release|string|copsf_looseversion|replace('n/a', 1000) >=     '9'|copsf_looseversion))
      %}
      {%-    set _ = namespaced['packages'].append('gpg-agent') %}
      {%-  endif %}
      {%- endif %}
      {%- if (
      (aid in ['ubuntu'] and (corpusops_core_os_release|string|copsf_looseversion >= '21.10'|copsf_looseversion))
      or (aid in ['debian'] and (corpusops_core_os_release|string|copsf_looseversion >= '11'|copsf_looseversion))
      ) %}
      {%-   for p in ['python', 'python-dev'] %}
      {%-    set _ = namespaced['packages'].remove(p) %}
      {%-   endfor %}
      {%-   set _ = namespaced['packages'].append('python3-distutils') %}
      {%- endif %}
      {%- if ((aid in ['ubuntu']) and (corpusops_core_os_release|string|copsf_looseversion >= '22.04'|copsf_looseversion)) %}
      {%-    set _ = namespaced['packages'].append('python-is-python3') %}
      {%- endif %}
      {%- if ansible_virtualization_type in ['docker', 'container', 'virtualpc'] %}
      {%-   for i in namespaced.packages_not_in_docker %}
      {%-     if i in namespaced.packages %}
      {%-       set _ = namespaced.packages.pop(namespaced.packages.index(i)) %}
      {%-     endif %}
      {%-   endfor %}
      {%- endif %}
      {%- if ansible_virtualization_type not in ['docker', 'container', 'virtualpc'] %}
      {%-  set _ = namespaced['packages'].extend(namespaced['packages_nonminimal'])%}
      {%- endif %}
      {{- (snamespaced[prefix+'vars']|copsf_registry_to_vars(vars, prefix, global_scope=True))[0] | to_json}}
  tags: [corpusops_vars, corpusops_localsettings_basepkgs_vars]
  no_log: "{{not (cops_vars_debug|default(false))}}"
