---
- hosts: all
  vars:
    corpusops_services_http_nginx_default_vhost_is_default_server: false
  tasks:
    - file:
        path: "{{item}}"
        state: absent
      with_items:
        - "/tmp/haproxy/test1.cfg"
    - include_role: {name: corpusops.roles/haproxy_registrations}
      vars:
        _corpusops_haproxy_registrations:
          file: "/tmp/haproxy/test1.cfg"
        corpusops_haproxy_registrations_registrations_b1:
        - ip: 10.0.3.14
          wildcards: ['*.www.super.com']
        - ip: 10.0.3.15
          regexes: ['my.*supemyappost.com', '^/api']
        - ip: 10.0.3.16
          hosts: [www.super3.com]
        - ip: 10.0.3.17
          hosts: [www.super2.com]
          frontends:
            80:  {to_port: 81}
            443: {to_port: 444}
        - ip: 10.0.3.18
          frontends:
            5672:  {}
        - ip: 10.0.3.19
          frontends:
            55672: {to_port: 333, mode: rabbitmq}
            5672: {mode: rabbitmq}
        - ip: 10.0.3.20
          frontends: {80: {}}
          hosts: [www.super6.com]
        - ip: 10.0.3.21
          hosts: [www.super7.com]
          frontends: {443: {}}
        - ip: [10.0.3.28, 10.0.3.29]
          hosts: [www.super28.com]
        - hosts: ["{{cops_zope_domain}}"]
          ip: "{{cops_zope_servers_ips}}"
          frontends:
            80:
              to_port: "{{cops_zope_http_port}}"
            443:
              to_port: "{{cops_zope_http_port}}"
              ssl_terminated: true
              http_fallback: false
    - stat: "path={{item}}"
      register: nginx_test_files
      with_items:
        - "/tmp/haproxy/test1.cfg"
    - debug:
        msg: |
             {% set ret = {"r": True} %}
             {% for a in nginx_test_files.results %}
             {% if not a.stat.exists %}
             {% set _ = ret.update({"r": False}) %}
             {% endif %}
             {% endfor %}
             {{ ret | to_json }}
      register: tnginx_test_files
      failed_when: "not tnginx_test_files.msg.r"

