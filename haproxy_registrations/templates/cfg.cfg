# {{ ansible_managed }}
{% set settings = corpusops_haproxy_registrations_vars %}


# BACKENDS
{% for id, data in settings.backends.items() %}
{% set name = data.get('name', id) %}
backend {{name}}
    log {{data.get('log', 'global')}}
    mode {{data.get('mode', 'http')}}
{% for opt in (data.get('raw_opts', [])|copshaproxyf_ordered_backend_opts) %}
{%- for optname in ['log', 'mode'] %}
{%- if opt.strip().startswith(optname + ' ') %}
{%- set opt = '' %}
{%- endif %}
{%- endfor %}
{%  if opt %}    {{opt}}{%endif%}
{%- endfor %}
{% for srv in data.get('servers', []) %}
    server {{ srv.name }} {{srv.bind}} {{srv.opts-}}
{% endfor %}
{% endfor %}


# DISPATCHERS
{% for id, data in settings.dispatchers.items() %}
{% set name = data.get('name', id) %}
listen {{name}} {{data.uri}}
    log {{data.get('log', 'global')}}
{% for opt in data.get('raw_opts', []) %}
{%- for optname in ['log'] %}
{%- if opt.strip().startswith(optname + ' ') %}
{%- set opt = '' %}
{%- endif %}
{%- endfor %}
{%  if opt %}    {{opt}}{%endif%}
{%- endfor %}
{% for disp in data.uris %}
    dispatch {{disp-}}
{% endfor %}

{% endfor %}


# FRONTENDS
{% for id, data in settings.frontends.items() %}
{% set name = data.get('name', id) %}
frontend {{name}}
    log {{data.get('log', 'global')}}
    bind {{data.bind}}
    mode {{data.get('mode', 'http')}}
{% for opt in (data.get('raw_opts', [])|copshaproxyf_ordered_frontend_opts) %}
{%- for optname in ['log', 'bind', 'mode'] %}
{%- if opt.strip().startswith(optname + ' ') %}
{%- set opt = '' %}
{%- endif %}
{%- endfor %}
{% if opt %}    {{opt}}{%endif%}
{%- endfor %}
{% endfor %}


# LISTENERS
{#- listeners can be deactivated in the pillar by setting bind to null
 # or omitting it
 # this is the canonical way to deactivate the stats listener
 #}
{% for id, data in settings.listeners.items() %}{% if data.get('bind') %}
{% set name = data.get('name', id) %}
{% if settings.version < '1.6' %}
listen {{name}} {{data.bind}}
{% else %}
listen {{name}}
    bind {{data.bind}}
{% endif %}
    log {{data.get('log', 'global')}}
    mode {{data.get('mode', 'http')}}
{% for opt in data.get('raw_opts', []) %}
{%- for optname in ['mode', 'bind', 'log'] %}
{%- if opt.strip().startswith(optname + ' ') %}
{%- set opt = '' %}
{%- endif %}
{%- endfor %}
{% if opt %}    {{opt.format(**data)}}{%endif%}
{%- endfor %}
{% for srv in data.get('servers', []) %}
    server {{ srv.name }} {{srv.bind}} {{srv.opts-}}
{% endfor %}
{%endif %}{% endfor %}
