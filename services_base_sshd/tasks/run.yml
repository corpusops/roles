---
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_services_base_sshd_vars.packages is not none and
          corpusops_services_base_sshd_vars.packages|length > 0)"
  tags: corpusops_services_base_sshd
  with_items: "{{corpusops_services_base_sshd_vars.packages}}"
- name: update & install prerequisites
  package:
    update_cache: yes
    name: '{{item}}'
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_services_base_sshd_vars.packages is not none and
          corpusops_services_base_sshd_vars.packages|length > 0)"
  tags: corpusops_services_base_sshd
  with_items: "{{corpusops_services_base_sshd_vars.packages}}"
- group:
    name: "{{corpusops_services_base_sshd_vars.group}}"
    system: yes
    state: present
  tags: corpusops_services_base_sshd
  notify: [restart_corpusops_services_base_sshd]
- name: files
  file:
    path: "{{item.path}}"
    state: "{{item.state|default(omit)}}"
    src: "{{item.src|default(omit)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    recurse: "{{item.recurse|default(omit)}}"
  with_items: "{{corpusops_services_base_sshd_vars.files}}"
  when: "(corpusops_services_base_sshd_vars.files is not none and
          corpusops_services_base_sshd_vars.files|length > 0)"
  tags: corpusops_services_base_sshd
  notify: [restart_corpusops_services_base_sshd]
- name: files copy
  copy:
    dest: "{{item.dest|default(omit)}}"
    src: "{{item.src
            | default(item.template)
            | default('../templates/'+item.dest)}}"
    force: "{{item.get('force', True)}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    recurse: "{{item.recurse|default(omit)}}"
  with_items: "{{corpusops_services_base_sshd_vars.filescopy}}"
  when: "(corpusops_services_base_sshd_vars.filescopy is not none and
          corpusops_services_base_sshd_vars.filescopy|length > 0)"
  tags: corpusops_services_base_sshd
  notify: [restart_corpusops_services_base_sshd]
- name: configs
  template:
    src: "{{item.src
            | default(item.template)
            | default('../templates/'+item.name)}}"
    dest: "{{item.name}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: "{{item.trim_blocks|default(False)}}"
  with_items: "{{corpusops_services_base_sshd_vars.configs}}"
  when: "(corpusops_services_base_sshd_vars.configs is not none and
          corpusops_services_base_sshd_vars.configs|length > 0)"
  tags: corpusops_services_base_sshd
- name: service
  cops_service:
    state: "{{corpusops_services_base_sshd_vars.activated
              | ternary('started', 'stopped')}}"
    enabled: "{{corpusops_services_base_sshd_vars.activated
                | ternary(True, False)}}"
    name: "{{item}}"
  with_items: "{{corpusops_services_base_sshd_vars.services}}"
  tags: corpusops_services_base_sshd
  when: "corpusops_vars.has_services_manager"
- meta: flush_handlers
