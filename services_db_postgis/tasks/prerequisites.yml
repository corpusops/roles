---
- file:
    path: /etc/apt/sources.list.d/services_db_postgis.list.list
    state: absent
- name: files for apt
  template:
    src: "{{item.template | default('../templates/'+item.name)}}"
    dest: "{{item.name}}"
    mode: "{{item.mode|default(omit)}}"
    owner: "{{item.owner|default(omit)}}"
    group: "{{item.group|default(omit)}}"
    trim_blocks: "{{item.trim_blocks|default(False)}}"
  loop: "{{corpusops_services_db_postgis_vars.files_apt|flatten(levels=1)}}"
  when: "(corpusops_services_db_postgis_vars.files_apt is not none and
          corpusops_services_db_postgis_vars.files_apt|length > 0)"
- name: install services_db_postgis repokey
  apt_key:
    id: '{{item}}'
    keyserver: "{{corpusops_services_db_postgis_vars.keyserver}}"
    state: present
  loop: '{{corpusops_services_db_postgis_vars.repo_keys}}'
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_services_db_postgis_vars.repo_keys is not none and
          corpusops_services_db_postgis_vars.repo_keys|length > 0)"
  register: corpusops_services_db_postgis_key
- name: install services_db_postgis repo
  apt_repository:
    repo: '{{corpusops_services_db_postgis_vars.repo}}'
    filename: services_db_postgis
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_services_db_postgis_vars.repo is not none)"
  register: corpusops_services_db_postgis_repoa
- apt:
    update_cache: yes
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_services_db_postgis_repoa.changed or
          corpusops_services_db_postgis_key.changed)"
- name: install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: '{{corpusops_services_db_postgis_vars.packages}}'
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_services_db_postgis_vars.packages is not none and
          corpusops_services_db_postgis_vars.packages|length > 0)"
  register: corpusops_services_db_postgis_pkgst
- name: update & install prerequisites
  package:
    cache_valid_time: '{{60*60}}'
    update_cache: yes
    name: "{{corpusops_services_db_postgis_vars.packages|flatten(levels=1)}}"
    state: present
  when: "(ansible_os_family.lower() in ['debian'] and
          corpusops_services_db_postgis_vars.packages is not none and
          corpusops_services_db_postgis_vars.packages|length > 0)"
- name: update & install prerequisites (yum-utils)
  package:
    update_cache: yes
    enablerepo: epel-testing
    name: 'yum-utils'
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_services_db_postgis_vars.packages is not none and
          corpusops_services_db_postgis_vars.packages|length > 0)"
- name: repo
  shell: |
    yum-config-manager --add-repo "{{item}}"
  loop: "{{[corpusops_services_db_postgis_vars.repo]|flatten(levels=1)}}"
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_services_db_postgis_vars.packages is not none and
          corpusops_services_db_postgis_vars.packages|length > 0)"
- name: update & install prerequisites
  package:
    update_cache: yes
    enablerepo: epel-testing
    name: "{{corpusops_services_db_postgis_vars.packages|flatten(levels=1)}}"
    state: present
  when: "(ansible_os_family.lower() in ['redhat'] and
          corpusops_services_db_postgis_vars.packages is not none and
          corpusops_services_db_postgis_vars.packages|length > 0)"
- group:
    name: "{{corpusops_services_db_postgis_vars.group}}"
    system: yes
    state: present
  when: "corpusops_services_db_postgis_vars.group"
- user:
    name: "{{corpusops_services_db_postgis_vars.user}}"
    system: yes
    groups: "{{corpusops_services_db_postgis_vars.group}}"
    append: true
  when: "corpusops_services_db_postgis_vars.user"
