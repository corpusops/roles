---
# need those vars:
#   secret_variable
#     name: "cops_foo_bar"
#     path: "/etc/secrets"
#     registry_prefix: cops_foo_
#
- debug: {msg: "{{secretvariable|default(none)}}"}
  no_log: "{{not (cops_vars_debug|default(false))}}"
- set_fact:
    cacheable: false
    cops_get_secret_variable_registry_prefix: "{{
      secretvariable.registry_prefix
      | default(cops_get_secret_variable_registry_prefix
      | default(cops_secret_variable_registry_prefix
      | default('')))}}"
- set_fact:
    cacheable: false
    _cops_get_secret_variable:
      registry_prefix: "{{cops_get_secret_variable_registry_prefix}}"
      name: "{{cops_get_secret_variable_registry_prefix
             }}{{secretvariable.name}}"
      path: "{{secretvariable.path|default(corpusops_vars.secrets_dir)}}"
- block:
  - name: "{{cops_get_secret_variable_registry_prefix[:-1]
           }} Secret generation: {{cops_get_secret_variable_name}}"
    include_role: {name: corpusops.roles/get_secret_variable}
    no_log: "not (cops_vars_debug|default(false))}}"
    when: vars.get(cops_get_secret_variable_name, none) is none
  - name: "{{cops_get_secret_variable_registry_prefix[:-1]
           }} Update  with {{cops_get_secret_variable_name}}"
    when: vars.get(cops_get_secret_variable_name, none) is not none
    include_jinja_vars:
      content: |
        ---
        {% set p = cops_get_secret_variable_registry_prefix %}
        {% set rp = '_{0}'.format(p[:-1]) %}
        {% set ret = {rp: vars.get(rp, {}),
                      p+'vars': vars.get(p+'vars', {})} %}
        {% set v = vars.get(cops_get_secret_variable_name, none) %}

        {% for i in ret %}
        {% set _ = ret[i].update({cops_get_secret_variable_name: v}) %}
        {% endfor %}
        {% set _ = ret.update({cops_get_secret_variable_name: v}) %}
        {{ ret | to_json }}
    no_log: "{{not (cops_secret_vars_debug|default(false))}}"
