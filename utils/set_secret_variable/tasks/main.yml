---
# need those vars:
#   secret_variable
#     name: "cops_foo_bar"
#     path: "/etc/secrets"
#     registry_prefix: cops_foo_
#
- debug: {msg: "{{secretvariable|default(none)}}"}
  no_log: "{{not (cops_vars_debug|default(false))}}"
- set_fact:
    cacheable: false
    cops_get_secret_variable_registry_prefix: "{{
      secretvariable.registry_prefix
      | default(cops_secret_variable_registry_prefix
      | default(cops_get_secret_variable_registry_prefix
      | default('')))}}"
- set_fact:
    cacheable: false
    __cops_get_secret_variable_registry_prefix: "{{cops_get_secret_variable_registry_prefix}}"
- when: "corpusops_vars is not defined"
  include_role: {name: corpusops.roles/vars, public: true}
- set_fact:
    cacheable: false
    __cops_get_secret_variable_name: "{{__cops_get_secret_variable_registry_prefix
             }}{{secretvariable.name|default(cops_get_secret_variable_name)}}"
    __cops_get_secret_variable_sname: "{{secretvariable.name|default(cops_get_secret_variable_name)}}"
- set_fact:
    cacheable: false
    _cops_get_secret_variable:
      registry_prefix: "{{cops_get_secret_variable_registry_prefix}}"
      # cops_get_secret_variable_name: retrocompat
      name: "{{__cops_get_secret_variable_name}}"
      # cops_get_secret_variable_path: retrocompat
      path: "{{secretvariable.path|default(cops_get_secret_variable_path|default(corpusops_vars.secrets_dir))}}"
  register: lcops_get_secret_variable
- block:
  - name: "{{__cops_get_secret_variable_registry_prefix[:-1]
           }} Secret generation: {{__cops_get_secret_variable_name}}"
    include_role: {name: corpusops.roles/get_secret_variable, public: true}
    no_log: "{{not (cops_vars_debug|default(false))}}"
    when: "vars.get(__cops_get_secret_variable_name, none) is none"
  - name: "{{__cops_get_secret_variable_registry_prefix[:-1]
           }} Update  with {{__cops_get_secret_variable_name}}"
    when: "vars.get(__cops_get_secret_variable_name, none) is not none"
    include_jinja_vars:
      content: |
        ---
        {% set p = __cops_get_secret_variable_registry_prefix %}
        {% set ret = vars.get(p+'vars', {}) %}
        {% set v = vars.get(__cops_get_secret_variable_name, none) %}
        {% set _ = ret.update({__cops_get_secret_variable_sname: v}) %}
        {{ (ret|copsf_update_registry(vars, p))[0] | to_json }}
    no_log: "{{not (cops_secret_vars_debug|default(false))}}"
