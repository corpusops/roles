---
- when: "not (corpusops_services_mail_postfix_vars.cert and
              corpusops_services_mail_postfix_vars.cert_key)"
  block:
  - shell: |
      {% set d="{0}/{1}".format(corpusops_services_mail_postfix_vars.prefix, "scert.pub")%}
      {% set key="{0}/{1}".format(corpusops_services_mail_postfix_vars.prefix, "scert.key")%}
      set -ex
      if [ ! -e "{{key}}" ] || [ ! -e "{{d}}" ];then
      if [ ! -e "{{key}}" ] ;then
       openssl req -x509 -new -keyout "{{key}}" -out "{{d}}" -days 36500 -nodes \
        -subj \
        "/C=CC/ST=ST/L=Ll/O=OO/CN={{corpusops_services_mail_postfix_vars.mailname}}/"
      else
       openssl req -x509 -new -key "{{key}}" -out "{{d}}" -days 36500 -nodes \
        -subj \
        "/C=CC/ST=ST/L=Ll/O=OO/CN={{corpusops_services_mail_postfix_vars.mailname}}/"
      fi
       echo changed >&2
      fi
      chmod 640 "{{key}}";chown root:postfix "{{key}}"
    register: _c_corpusops_postfix_key_g
    changed_when: "'changed' in _c_corpusops_postfix_key_g.stderr"
    no_log: "{{not (cops_secret_vars_debug|default(false))}}"
  - shell: cat "{{corpusops_services_mail_postfix_vars.prefix}}/scert.pub"
    register: _c_corpusops_postfix_cert
    changed_when: false
    no_log: "{{not (cops_secret_vars_debug|default(false))}}"
  - shell: cat "{{corpusops_services_mail_postfix_vars.prefix}}/scert.key"
    changed_when: false
    register: _c_corpusops_postfix_key
    no_log: "{{not (cops_secret_vars_debug|default(false))}}"
  - set_fact:
      cacheable: false
      corpusops_services_mail_postfix_selfsigned_cert: "{{
        _c_corpusops_postfix_cert.stdout.strip()
      }}"
      corpusops_services_mail_postfix_selfsigned_cert_key: "{{
        _c_corpusops_postfix_key.stdout.strip()
      }}"
    no_log: "{{not (cops_secret_vars_debug|default(false))}}"
  - include_role: {name: corpusops.roles/configs, public: false}
    vars:
      cops_configs_templates: "{{corpusops_services_mail_postfix_vars.certs_configs}}"
- name: postfix sync chroot
  shell: |
    set -ex
    {% set v = corpusops_vars %}
    {% set d = corpusops_services_mail_postfix_vars %}
    if [ ! -e "{{d.chroot}}/etc/postfix" ];then mkdir "{{d.chroot}}/etc/postfix";fi
    rsync -a "{{d.prefix}}/certificate.pub" \
      "{{d.chroot}}/etc/postfix/certificate.pub"
    rsync -a "{{d.prefix}}/certificate.key" \
      "{{d.chroot}}/etc/postfix/certificate.key"
    rsync -a "{{v.config_dir}}/ssl/" "{{d.chroot}}/etc/ssl/"
    rsync -a "{{v.config_dir}}/mailname" "{{d.chroot}}/etc/mailname"
    for i in aliases mailname hosts resolv.conf localtime nsswitch.conf;do
      cat "{{v.config_dir}}/$i" > "{{d.chroot}}/etc/$i"
    done
  changed_when: false
  when: "corpusops_services_mail_postfix_vars.chroot|copsf_asbool"
- name: build postfix maps
  shell: |-
    set -ex
    {% set d = corpusops_services_mail_postfix_vars %}
    cd "{{d.prefix }}"
    {% set h = "{0}/{1}".format(d.prefix, item) %}
    postmap "hash://{{h}}"
    if [ -e "{{h}}.local" ];then postmap "hash://{{h}}.local";fi
  loop: "{{corpusops_services_mail_postfix_vars.hashtables|flatten(levels=1)}}"
  changed_when: false
- name:  fixperms
  shell: |-
    set -ex
    "{{corpusops_services_mail_postfix_vars.prefix}}/resetperms.sh"
  changed_when: false
