---
{% set prefix = 'corpusops_lxc_' %}
{% set flavors = ['ubuntu', 'debian', 'redhat', 'default'] %}
{% set knobs = [] %}
{% set computed_defaults = ['template_options', 'included_config'] %}
{% set computed_container_defaults = ['template_options'] %}
{% set lowered = [] %}
{% set sub_namespaced = {'containers': {}} %}
{% set namespaced = {'containers': {}} %}
{% set subos_append = {} %}
{#
{% set subos_append = {
    'ubuntu': {'os': 'debian', 'vars': ['packages']}
} %}
#}

{% for v in knobs %}
{%  for os in flavors %}
{%   if  (
        os == 'default' or
        ansible_os_family.lower() == os or
        ansible_lsb.id.lower() == os) %}
{%    set vn = prefix + v %}
{%    if vars[vn] is none %}
{%      set os_val = vars.get(vn + '_' + os, None) %}
{%      if os_val is not none %}
{%        set  _ = vars.update({vn: os_val}) %}
{%      endif %}
{%    endif %}
{%   endif %}
{%  endfor %}
{% endfor %}

{% for os in subos_append %}
{%  if ansible_lsb.id.lower() == os %}
{%    for v in subos_append[os].vars %}
{%      set vn = prefix+'{0}_{1}'.format(
            v, subos_append[os].os) %}
{%      set _ = vars[prefix+v].extend(vars[vn]) %}
{%    endfor %}
{%  endif %}
{% endfor %}

{% for k in computed_defaults %}
{%  set _ = vars.update({prefix+k: vars[prefix+k].format(**vars)}) %}
{% endfor %}
{% for k in lowered %}
{%  set _ = vars.update({prefix+k: vars[prefix+k].lower()}) %}
{% endfor %}

{% for var in vars %}
{%  if var.startswith(prefix) %}
{%   set skipped = {'skip': False } %}
{%   for flav in flavors if not skipped.skip %}
{%    if var.endswith('_'+flav) and var.split('_'+flav)[0] in vars %}
{%     set _ = skipped.update({'skip': True}) %}
{%    endif %}
{%   endfor %}
{%   for ns in sub_namespaced if sub_namespaced|length > 0 %}
{%    if var.startswith(prefix+ns+'_') and not skipped.skip%}
{%     set svar = var.replace(prefix+ns+'_', '') %}
{%     set _ = sub_namespaced[ns].update({svar: vars[var]}) %}
{%    endif %}
{%    set _ = namespaced.update({ns: sub_namespaced[ns]}) %}
{%   endfor %}
{%   if not skipped.skip %}
{%    set svar = var.replace(prefix, '') %}
{%    set _ = namespaced.update({svar: vars[var]}) %}
{%   endif %}
{%  endif %}
{% endfor %}

{% if namespaced['container_name'] %}
{%  set _ = namespaced['containers'].setdefault(namespaced['container_name'], {}) %}
{% endif %}

{% for lxc in namespaced['containers'] %}
{%  set lxcdata = namespaced['containers'][lxc] %}
{%  for k in [
      'remove_password',
      'included_config',
      'ssh_keys_paths', 'ssh_keys',
      'auto_start', 'container_name',  'path',
      'backing_store', 'clone_snapshot',
      'from_container',
      'template', 'template_options',
      'ubuntu_release', 'ubuntu_mirror',
      'pip', 'clone_snapshot'] %}
{%    if k == 'clone_snapshot' %}
{%      set bs = namespaced['backing_store'] %}
{%      set bss = namespaced['clone_snapshot'] %}
{%      if bss in [None, 'None', 'none', 'null', ''] and bs not in ['dir', 'lvm']%}
{%        set bss = True %}
{%      endif%}
{%      set _ = lxcdata.setdefault(k, bss) %}
{%    endif %}
{%    set  _ = lxcdata.setdefault(k, namespaced.get(k, None)) %}
{%  endfor %}
{%  for k in computed_container_defaults %}
{%    if k in lxcdata %}
{%      set _ = lxcdata.update({k: lxcdata[k].format(**vars)}) %}
{%    endif %}
{%  endfor %}
{%  for ifc in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'] %}
{%    for k in ['mac', 'bridge', 'gateway', 'ip'] %}
{%      set ifcknob = 'eth{0}_{1}'.format(ifc, k) %}
{%      set  _ = lxcdata.setdefault(ifcknob, namespaced[ifcknob]) %}
{%    endfor %}
{%  endfor %}
{% endfor %}

{{ namespaced | to_json }}
