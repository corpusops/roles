# {{ansible_managed}}

#{% set v = docker_compose_service_vars %}
#{% set d = v.project %}
#{% set w = v.path %}
description "{{d}} DockerCompose service"
author "corpusops"
start on filesystem and started docker
stop on runlevel [!2345]
# Automatically restart process if crashed (limit 3 times in 4 minutes)
{% if "{0}".format(v.restart).lower() not in ["no", "false"] %}
respawn
{% endif %}
kill signal SIGINT

script
set -x
cd "{{w}}"
{% if not v.pull %}# {%endif%}/usr/bin/env docker-compose -p "{{d}}" {% for i in v._files%}-f "{{i}}" {%endfor%} pull {{v.pull_args}} &&\
/usr/bin/env docker-compose -p "{{d}}" {% for i in v._files%}-f "{{i}}" {%endfor%} up   {{v.up_args}}
end script

pre-start script
cd "{{w}}"
/usr/bin/env docker-compose -p "{{d}}" {% for i in v._files%}-f "{{i}}" {%endfor%} config {{v.config_args}} || exit 1
end script

pre-stop script
cd "{{w}}"
/usr/bin/env docker-compose -p "{{d}}" {% for i in v._files%}-f "{{i}}" {%endfor%} config {{v.config_args}} || exit 1
end script

post-stop script
set -x
cd "{{w}}"
/usr/bin/env docker-compose -p "{{d}}" {% for i in v._files%}-f "{{i}}" {%endfor%} stop {{v.stop_args}} || /bin/true
/usr/bin/env docker-compose -p "{{d}}" {% for i in v._files%}-f "{{i}}" {%endfor%} down {{v.down_args}} || /bin/true
end script
# vim: set ft=upstart :
