---
ssl_ca_signed_cert_cops_do_format_resolve: false
ssl_ca_signed_cert_cops_computed_defaults: []
ssl_ca_signed_cert_cops_flavors: ['ubuntu', 'debian', 'redhat', 'default']
ssl_ca_signed_cert_cops_sub_os_append: {}
ssl_ca_signed_cert_cops_knobs: []
ssl_ca_signed_cert_cops_lowered: []
ssl_ca_signed_cert_cops_sub_namespaces: {}
ssl_ca_signed_cert_cn: "{{ansible_fqdn}}"
ssl_ca_signed_cert_cns: ["{{vars['ssl_ca_signed_cert_cn']}}"]
ssl_ca_signed_cert_root_ca_name: "ROOT {{vars['ssl_ca_signed_cert_ca_name']}}"
ssl_ca_signed_cert_ca_name: "ansible_ca"
ssl_ca_signed_cert_C: US
ssl_ca_signed_cert_ST: Oregon
ssl_ca_signed_cert_L: Portland
ssl_ca_signed_cert_O: IT
ssl_ca_signed_cert_OU: SYS
ssl_ca_signed_cert_signm: aes256
ssl_ca_signed_cert_openssl_config: "{{corpusops_vars.ssl_dir}}/openssl.cnf"
ssl_ca_signed_cert_email: "sysadmin@{{ansible_fqdn}}"
ssl_ca_signed_cert_intermediate_ca_subject: "/C={{vars['ssl_ca_signed_cert_C']}}/ST={{vars['ssl_ca_signed_cert_ST']}}/L={{vars['ssl_ca_signed_cert_L']}}/O={{vars['ssl_ca_signed_cert_O']}}/CN={{vars['ssl_ca_signed_cert_ca_name']}}/"
ssl_ca_signed_cert_ca_subject: "/C={{vars['ssl_ca_signed_cert_C']}}/ST={{vars['ssl_ca_signed_cert_ST']}}/L={{vars['ssl_ca_signed_cert_L']}}/O={{vars['ssl_ca_signed_cert_O']}}/CN={{vars['ssl_ca_signed_cert_root_ca_name']}}/"
ssl_ca_signed_cert_subject: "/C={{vars['ssl_ca_signed_cert_C']}}/ST={{vars['ssl_ca_signed_cert_ST']}}/L={{vars['ssl_ca_signed_cert_L']}}/O={{vars['ssl_ca_signed_cert_O']}}/CN={{vars['ssl_ca_signed_cert_cn']}}/"
# directory to install signed cert
ssl_ca_signed_cert_prefix: "{{corpusops_vars.ssl_dir}}"
# Top directory for CA layout
ssl_ca_signed_cert_directory: "{{vars['ssl_ca_signed_cert_prefix']}}/{{vars['ssl_ca_signed_cert_ca_name']}}"
ssl_ca_signed_cert_idirectory: "{{vars['ssl_ca_signed_cert_directory']}}/intermediate"
ssl_ca_signed_cert_gen_csr_path: "{{vars['ssl_ca_signed_cert_idirectory']}}/csr/{{vars['ssl_ca_signed_cert_cn']}}.csr.pem"
ssl_ca_signed_cert_gen_cert_path: "{{vars['ssl_ca_signed_cert_idirectory']}}/certs/{{vars['ssl_ca_signed_cert_cn']}}.cert.pem"
ssl_ca_signed_cert_gen_key_path: "{{vars['ssl_ca_signed_cert_idirectory']}}/private/{{vars['ssl_ca_signed_cert_cn']}}.key.pem"
ssl_ca_signed_cert_gen_chain_path: "{{vars['ssl_ca_signed_cert_idirectory']}}/certs/ca-chain.cert.pem"
ssl_ca_signed_cert_days: 365000
ssl_ca_signed_cert_ca_days: 365000
ssl_ca_signed_cert_owner: ""
ssl_ca_signed_cert_group: ""
ssl_ca_signed_cert_ca_klen: 4096
ssl_ca_signed_cert_ica_klen: 4096
# if ==revoke, revoke the cert (not implemented yet)
ssl_ca_signed_cert_action: null
# Force CA regeneration
ssl_ca_signed_cert_ca_force: false
# Force CERT regeneration
ssl_ca_signed_cert_force: false
#
ssl_ca_signed_cert_sign_openssl_args_default: "-batch -config \"$f\" -notext -md sha256 -extensions server_cert -extensions SAN"
ssl_ca_signed_cert_sign_openssl_args: "{{vars['ssl_ca_signed_cert_sign_openssl_args_default']}}"
#
ssl_ca_signed_cert_csr_openssl_args_default: "-config \"$f\" -new -sha256 -reqexts SAN -extensions SAN"
ssl_ca_signed_cert_csr_openssl_args: "{{vars['ssl_ca_signed_cert_csr_openssl_args_default']}}"
#
ssl_ca_signed_cert_basename: "{{vars['ssl_ca_signed_cert_cn']}}"
# Have the cert as .pem AND .crt by default (same file, differents exts)
ssl_ca_signed_cert_lnk_ext: crt
ssl_ca_signed_cert_do_links: true
#
ssl_ca_signed_cert_dest_cert_bundle_basename: "{{vars['ssl_ca_signed_cert_basename']}}.bundle.pem"
ssl_ca_signed_cert_dest_cert_full_basename: "{{vars['ssl_ca_signed_cert_basename']}}.full.pem"
ssl_ca_signed_cert_dest_cert_intermediate_basename: "{{vars['ssl_ca_signed_cert_basename']}}.intermediate.pem"
ssl_ca_signed_cert_dest_cert_caroot_basename: "{{vars['ssl_ca_signed_cert_basename']}}.caroot.pem"
ssl_ca_signed_cert_dest_cert_cachain_basename: "{{vars['ssl_ca_signed_cert_basename']}}.cachain.pem"
ssl_ca_signed_cert_dest_cert_basename:      "{{vars['ssl_ca_signed_cert_basename']}}.pem"
ssl_ca_signed_cert_dest_cert_key_basename:  "{{vars['ssl_ca_signed_cert_basename']}}.key"
#
ssl_ca_signed_cert_dest_cert_path:      "{% if vars['ssl_ca_signed_cert_prefix'] == corpusops_vars.ssl_dir %}{{corpusops_vars.ssl_dir}}/certs{%   else %}{{vars['ssl_ca_signed_cert_prefix']}}{% endif %}/{{vars['ssl_ca_signed_cert_dest_cert_basename']}}"
ssl_ca_signed_cert_dest_key_path:       "{% if vars['ssl_ca_signed_cert_prefix'] == corpusops_vars.ssl_dir %}{{corpusops_vars.ssl_dir}}/private{% else %}{{vars['ssl_ca_signed_cert_prefix']}}{% endif %}/{{vars['ssl_ca_signed_cert_dest_cert_key_basename']}}"
ssl_ca_signed_cert_dest_cert_full_path: "{% if vars['ssl_ca_signed_cert_prefix'] == corpusops_vars.ssl_dir %}{{corpusops_vars.ssl_dir}}/certs{%   else %}{{vars['ssl_ca_signed_cert_prefix']}}{% endif %}/{{vars['ssl_ca_signed_cert_dest_cert_full_basename']}}"
#
ssl_ca_signed_cert_dest_cert_bundle_path: "{% if vars['ssl_ca_signed_cert_prefix'] == corpusops_vars.ssl_dir %}{{corpusops_vars.ssl_dir}}/certs{%   else %}{{vars['ssl_ca_signed_cert_prefix']}}{% endif %}/{{vars['ssl_ca_signed_cert_dest_cert_bundle_basename']}}"
ssl_ca_signed_cert_dest_cert_cachain_path: "{% if vars['ssl_ca_signed_cert_prefix'] == corpusops_vars.ssl_dir %}{{corpusops_vars.ssl_dir}}/certs{%   else %}{{vars['ssl_ca_signed_cert_prefix']}}{% endif %}/{{vars['ssl_ca_signed_cert_dest_cert_cachain_basename']}}"
ssl_ca_signed_cert_dest_cert_intermediate_path: "{% if vars['ssl_ca_signed_cert_prefix'] == corpusops_vars.ssl_dir %}{{corpusops_vars.ssl_dir}}/certs{%   else %}{{vars['ssl_ca_signed_cert_prefix']}}{% endif %}/{{vars['ssl_ca_signed_cert_dest_cert_intermediate_basename']}}"
ssl_ca_signed_cert_dest_cert_caroot_path: "{% if vars['ssl_ca_signed_cert_prefix'] == corpusops_vars.ssl_dir %}{{corpusops_vars.ssl_dir}}/certs{%   else %}{{vars['ssl_ca_signed_cert_prefix']}}{% endif %}/{{vars['ssl_ca_signed_cert_dest_cert_caroot_basename']}}"


